Rules useless in parser due to conflicts

   99 FunctionCallOp: /* empty */


State 29 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce
State 87 conflicts: 19 reduce/reduce
State 124 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: FunctionDecl Program
    2        | /* empty */

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    4 ParamList: Param ParamTail
    5          | /* empty */

    6 ParamTail: COMMA Param ParamTail
    7          | /* empty */

    8 Param: Type IDENTIFIER

    9 Type: BaseType TypeTail

   10 BaseType: KEYWORD_INT
   11         | KEYWORD_FLOAT
   12         | KEYWORD_CHAR

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL CLOSED_BRACKET TypeTail
   14         | STAR TypeTail
   15         | /* empty */

   16 StmtList: Stmt StmtList
   17         | /* empty */

   18 Stmt: VarDeclStmt
   19     | AssignStmt
   20     | IfStmt
   21     | WhileStmt
   22     | ForStmt
   23     | ReturnStmt
   24     | ExprStmt

   25 Body: OPEN_CURLY StmtList CLOSED_CURLY
   26     | Stmt

   27 VarDeclExpr: Type IDENTIFIER InitOpt

   28 VarDeclStmt: VarDeclExpr SEMICOLON

   29 InitOpt: EQUALS Expr
   30        | /* empty */

   31 AssignExpr: AssignTarget AssignOp Expr

   32 AssignStmt: AssignExpr SEMICOLON

   33 AssignTarget: IDENTIFIER
   34             | IDENTIFIER OPEN_BRACKET Expr CLOSED_BRACKET
   35             | STAR IDENTIFIER

   36 AssignOp: EQUALS
   37         | PLUS_EQUALS
   38         | MINUS_EQUALS
   39         | SLASH_EQUALS
   40         | STAR_EQUALS
   41         | AMPERSAND_EQUALS
   42         | PIPE_EQUALS
   43         | CARET_EQUALS
   44         | TILDE_EQUALS

   45 IfStmt: KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN Body ElseOpt

   46 ElseOpt: KEYWORD_ELSE Body
   47        | /* empty */

   48 WhileStmt: KEYWORD_WHILE OPEN_PAREN Expr CLOSED_PAREN Body

   49 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

   50 ForInit: VarDeclExpr
   51        | AssignExpr
   52        | /* empty */

   53 ExprOpt: Expr
   54        | /* empty */

   55 ForUpdate: AssignExpr
   56          | /* empty */

   57 ReturnStmt: KEYWORD_RET ExprOpt SEMICOLON

   58 ExprStmt: Expr SEMICOLON

   59 ExprList: Expr ExprTail
   60         | /* empty */

   61 ExprTail: COMMA Expr ExprTail
   62         | /* empty */

   63 Expr: UnaryExpr RelOpTail

   64 RelOpTail: RelOp UnaryExpr
   65          | /* empty */

   66 RelOp: LESS_THAN
   67      | GREATER_THAN
   68      | LESS_THAN_EQUALS
   69      | GREATER_THAN_EQUALS
   70      | EQUALS_EQUALS
   71      | BANG_EQUALS

   72 UnaryExpr: UnaryOpList SimpleExpr

   73 UnaryOpList: UnaryOp UnaryOpList
   74            | /* empty */

   75 UnaryOp: MINUS
   76        | BANG

   77 SimpleExpr: Term AddOpTail

   78 AddOpTail: AddOp Term AddOpTail
   79          | /* empty */

   80 AddOp: PLUS
   81      | MINUS
   82      | PIPE
   83      | CARET
   84      | PIPE_PIPE

   85 Term: Factor MulOpTail

   86 MulOpTail: MulOp Factor MulOpTail
   87          | /* empty */

   88 MulOp: STAR
   89      | SLASH
   90      | AMPERSAND
   91      | AMPERSAND_AMPERSAND

   92 Factor: OPEN_PAREN Expr CLOSED_PAREN
   93       | IDENTIFIER
   94       | INTEGER_LITERAL
   95       | FLOAT_LITERAL
   96       | CHAR_LITERAL
   97       | IDENTIFIER FunctionCallOp

   98 FunctionCallOp: OPEN_PAREN ExprList CLOSED_PAREN
   99               | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
KEYWORD_FN (258) 3
IDENTIFIER (259) 3 8 27 33 34 35 93 97
OPEN_PAREN (260) 3 45 48 49 92 98
CLOSED_PAREN (261) 3 45 48 49 92 98
RIGHT_ARROW (262) 3
OPEN_CURLY (263) 3 25
CLOSED_CURLY (264) 3 25
COMMA (265) 6 61
KEYWORD_INT (266) 10
KEYWORD_FLOAT (267) 11
KEYWORD_CHAR (268) 12
OPEN_BRACKET (269) 13 34
CLOSED_BRACKET (270) 13 34
STAR (271) 14 35 88
SEMICOLON (272) 28 32 49 57 58
EQUALS (273) 29 36
PLUS_EQUALS (274) 37
MINUS_EQUALS (275) 38
SLASH_EQUALS (276) 39
STAR_EQUALS (277) 40
AMPERSAND_EQUALS (278) 41
PIPE_EQUALS (279) 42
CARET_EQUALS (280) 43
TILDE_EQUALS (281) 44
KEYWORD_IF (282) 45
KEYWORD_ELSE (283) 46
KEYWORD_WHILE (284) 48
KEYWORD_FOR (285) 49
KEYWORD_RET (286) 57
LESS_THAN (287) 66
GREATER_THAN (288) 67
LESS_THAN_EQUALS (289) 68
GREATER_THAN_EQUALS (290) 69
EQUALS_EQUALS (291) 70
BANG_EQUALS (292) 71
MINUS (293) 75 81
BANG (294) 76
PLUS (295) 80
PIPE (296) 82
CARET (297) 83
PIPE_PIPE (298) 84
SLASH (299) 89
AMPERSAND (300) 90
AMPERSAND_AMPERSAND (301) 91
INTEGER_LITERAL (302) 13 94
FLOAT_LITERAL (303) 95
CHAR_LITERAL (304) 96


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
Program (51)
    on left: 1 2, on right: 0 1
FunctionDecl (52)
    on left: 3, on right: 1
ParamList (53)
    on left: 4 5, on right: 3
ParamTail (54)
    on left: 6 7, on right: 4 6
Param (55)
    on left: 8, on right: 4 6
Type (56)
    on left: 9, on right: 3 8 27
BaseType (57)
    on left: 10 11 12, on right: 9
TypeTail (58)
    on left: 13 14 15, on right: 9 13 14
StmtList (59)
    on left: 16 17, on right: 3 16 25
Stmt (60)
    on left: 18 19 20 21 22 23 24, on right: 16 26
Body (61)
    on left: 25 26, on right: 45 46 48 49
VarDeclExpr (62)
    on left: 27, on right: 28 50
VarDeclStmt (63)
    on left: 28, on right: 18
InitOpt (64)
    on left: 29 30, on right: 27
AssignExpr (65)
    on left: 31, on right: 32 51 55
AssignStmt (66)
    on left: 32, on right: 19
AssignTarget (67)
    on left: 33 34 35, on right: 31
AssignOp (68)
    on left: 36 37 38 39 40 41 42 43 44, on right: 31
IfStmt (69)
    on left: 45, on right: 20
ElseOpt (70)
    on left: 46 47, on right: 45
WhileStmt (71)
    on left: 48, on right: 21
ForStmt (72)
    on left: 49, on right: 22
ForInit (73)
    on left: 50 51 52, on right: 49
ExprOpt (74)
    on left: 53 54, on right: 49 57
ForUpdate (75)
    on left: 55 56, on right: 49
ReturnStmt (76)
    on left: 57, on right: 23
ExprStmt (77)
    on left: 58, on right: 24
ExprList (78)
    on left: 59 60, on right: 98
ExprTail (79)
    on left: 61 62, on right: 59 61
Expr (80)
    on left: 63, on right: 29 31 34 45 48 53 58 59 61 92
RelOpTail (81)
    on left: 64 65, on right: 63
RelOp (82)
    on left: 66 67 68 69 70 71, on right: 64
UnaryExpr (83)
    on left: 72, on right: 63 64
UnaryOpList (84)
    on left: 73 74, on right: 72 73
UnaryOp (85)
    on left: 75 76, on right: 73
SimpleExpr (86)
    on left: 77, on right: 72
AddOpTail (87)
    on left: 78 79, on right: 77 78
AddOp (88)
    on left: 80 81 82 83 84, on right: 78
Term (89)
    on left: 85, on right: 77 78
MulOpTail (90)
    on left: 86 87, on right: 85 86
MulOp (91)
    on left: 88 89 90 91, on right: 86
Factor (92)
    on left: 92 93 94 95 96 97, on right: 85 86
FunctionCallOp (93)
    on left: 98 99, on right: 97


state 0

    0 $accept: . Program $end

    KEYWORD_FN  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program       go to state 2
    FunctionDecl  go to state 3


state 1

    3 FunctionDecl: KEYWORD_FN . IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


state 3

    1 Program: FunctionDecl . Program

    KEYWORD_FN  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program       go to state 6
    FunctionDecl  go to state 3


state 4

    3 FunctionDecl: KEYWORD_FN IDENTIFIER . OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    OPEN_PAREN  shift, and go to state 7


state 5

    0 $accept: Program $end .

    $default  accept


state 6

    1 Program: FunctionDecl Program .

    $default  reduce using rule 1 (Program)


state 7

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN . ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10

    $default  reduce using rule 5 (ParamList)

    ParamList  go to state 11
    Param      go to state 12
    Type       go to state 13
    BaseType   go to state 14


state 8

   10 BaseType: KEYWORD_INT .

    $default  reduce using rule 10 (BaseType)


state 9

   11 BaseType: KEYWORD_FLOAT .

    $default  reduce using rule 11 (BaseType)


state 10

   12 BaseType: KEYWORD_CHAR .

    $default  reduce using rule 12 (BaseType)


state 11

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList . CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    CLOSED_PAREN  shift, and go to state 15


state 12

    4 ParamList: Param . ParamTail

    COMMA  shift, and go to state 16

    $default  reduce using rule 7 (ParamTail)

    ParamTail  go to state 17


state 13

    8 Param: Type . IDENTIFIER

    IDENTIFIER  shift, and go to state 18


state 14

    9 Type: BaseType . TypeTail

    OPEN_BRACKET  shift, and go to state 19
    STAR          shift, and go to state 20

    $default  reduce using rule 15 (TypeTail)

    TypeTail  go to state 21


state 15

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN . RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    RIGHT_ARROW  shift, and go to state 22


state 16

    6 ParamTail: COMMA . Param ParamTail

    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10

    Param     go to state 23
    Type      go to state 13
    BaseType  go to state 14


state 17

    4 ParamList: Param ParamTail .

    $default  reduce using rule 4 (ParamList)


state 18

    8 Param: Type IDENTIFIER .

    $default  reduce using rule 8 (Param)


state 19

   13 TypeTail: OPEN_BRACKET . INTEGER_LITERAL CLOSED_BRACKET TypeTail

    INTEGER_LITERAL  shift, and go to state 24


state 20

   14 TypeTail: STAR . TypeTail

    OPEN_BRACKET  shift, and go to state 19
    STAR          shift, and go to state 20

    $default  reduce using rule 15 (TypeTail)

    TypeTail  go to state 25


state 21

    9 Type: BaseType TypeTail .

    $default  reduce using rule 9 (Type)


state 22

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW . Type OPEN_CURLY StmtList CLOSED_CURLY

    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10

    Type      go to state 26
    BaseType  go to state 14


state 23

    6 ParamTail: COMMA Param . ParamTail

    COMMA  shift, and go to state 16

    $default  reduce using rule 7 (ParamTail)

    ParamTail  go to state 27


state 24

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL . CLOSED_BRACKET TypeTail

    CLOSED_BRACKET  shift, and go to state 28


state 25

   14 TypeTail: STAR TypeTail .

    $default  reduce using rule 14 (TypeTail)


state 26

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type . OPEN_CURLY StmtList CLOSED_CURLY

    OPEN_CURLY  shift, and go to state 29


state 27

    6 ParamTail: COMMA Param ParamTail .

    $default  reduce using rule 6 (ParamTail)


state 28

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL CLOSED_BRACKET . TypeTail

    OPEN_BRACKET  shift, and go to state 19
    STAR          shift, and go to state 20

    $default  reduce using rule 15 (TypeTail)

    TypeTail  go to state 30


state 29

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY . StmtList CLOSED_CURLY

    IDENTIFIER     shift, and go to state 31
    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10
    STAR           shift, and go to state 32
    KEYWORD_IF     shift, and go to state 33
    KEYWORD_WHILE  shift, and go to state 34
    KEYWORD_FOR    shift, and go to state 35
    KEYWORD_RET    shift, and go to state 36
    MINUS          shift, and go to state 37
    BANG           shift, and go to state 38

    IDENTIFIER    [reduce using rule 74 (UnaryOpList)]
    CLOSED_CURLY  reduce using rule 17 (StmtList)
    $default      reduce using rule 74 (UnaryOpList)

    Type          go to state 39
    BaseType      go to state 14
    StmtList      go to state 40
    Stmt          go to state 41
    VarDeclExpr   go to state 42
    VarDeclStmt   go to state 43
    AssignExpr    go to state 44
    AssignStmt    go to state 45
    AssignTarget  go to state 46
    IfStmt        go to state 47
    WhileStmt     go to state 48
    ForStmt       go to state 49
    ReturnStmt    go to state 50
    ExprStmt      go to state 51
    Expr          go to state 52
    UnaryExpr     go to state 53
    UnaryOpList   go to state 54
    UnaryOp       go to state 55


state 30

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL CLOSED_BRACKET TypeTail .

    $default  reduce using rule 13 (TypeTail)


state 31

   33 AssignTarget: IDENTIFIER .
   34             | IDENTIFIER . OPEN_BRACKET Expr CLOSED_BRACKET

    OPEN_BRACKET  shift, and go to state 56

    $default  reduce using rule 33 (AssignTarget)


state 32

   35 AssignTarget: STAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 57


state 33

   45 IfStmt: KEYWORD_IF . OPEN_PAREN Expr CLOSED_PAREN Body ElseOpt

    OPEN_PAREN  shift, and go to state 58


state 34

   48 WhileStmt: KEYWORD_WHILE . OPEN_PAREN Expr CLOSED_PAREN Body

    OPEN_PAREN  shift, and go to state 59


state 35

   49 ForStmt: KEYWORD_FOR . OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    OPEN_PAREN  shift, and go to state 60


state 36

   57 ReturnStmt: KEYWORD_RET . ExprOpt SEMICOLON

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    SEMICOLON  reduce using rule 54 (ExprOpt)
    $default   reduce using rule 74 (UnaryOpList)

    ExprOpt      go to state 61
    Expr         go to state 62
    UnaryExpr    go to state 53
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 37

   75 UnaryOp: MINUS .

    $default  reduce using rule 75 (UnaryOp)


state 38

   76 UnaryOp: BANG .

    $default  reduce using rule 76 (UnaryOp)


state 39

   27 VarDeclExpr: Type . IDENTIFIER InitOpt

    IDENTIFIER  shift, and go to state 63


state 40

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList . CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 64


state 41

   16 StmtList: Stmt . StmtList

    IDENTIFIER     shift, and go to state 31
    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10
    STAR           shift, and go to state 32
    KEYWORD_IF     shift, and go to state 33
    KEYWORD_WHILE  shift, and go to state 34
    KEYWORD_FOR    shift, and go to state 35
    KEYWORD_RET    shift, and go to state 36
    MINUS          shift, and go to state 37
    BANG           shift, and go to state 38

    IDENTIFIER    [reduce using rule 74 (UnaryOpList)]
    CLOSED_CURLY  reduce using rule 17 (StmtList)
    $default      reduce using rule 74 (UnaryOpList)

    Type          go to state 39
    BaseType      go to state 14
    StmtList      go to state 65
    Stmt          go to state 41
    VarDeclExpr   go to state 42
    VarDeclStmt   go to state 43
    AssignExpr    go to state 44
    AssignStmt    go to state 45
    AssignTarget  go to state 46
    IfStmt        go to state 47
    WhileStmt     go to state 48
    ForStmt       go to state 49
    ReturnStmt    go to state 50
    ExprStmt      go to state 51
    Expr          go to state 52
    UnaryExpr     go to state 53
    UnaryOpList   go to state 54
    UnaryOp       go to state 55


state 42

   28 VarDeclStmt: VarDeclExpr . SEMICOLON

    SEMICOLON  shift, and go to state 66


state 43

   18 Stmt: VarDeclStmt .

    $default  reduce using rule 18 (Stmt)


state 44

   32 AssignStmt: AssignExpr . SEMICOLON

    SEMICOLON  shift, and go to state 67


state 45

   19 Stmt: AssignStmt .

    $default  reduce using rule 19 (Stmt)


state 46

   31 AssignExpr: AssignTarget . AssignOp Expr

    EQUALS            shift, and go to state 68
    PLUS_EQUALS       shift, and go to state 69
    MINUS_EQUALS      shift, and go to state 70
    SLASH_EQUALS      shift, and go to state 71
    STAR_EQUALS       shift, and go to state 72
    AMPERSAND_EQUALS  shift, and go to state 73
    PIPE_EQUALS       shift, and go to state 74
    CARET_EQUALS      shift, and go to state 75
    TILDE_EQUALS      shift, and go to state 76

    AssignOp  go to state 77


state 47

   20 Stmt: IfStmt .

    $default  reduce using rule 20 (Stmt)


state 48

   21 Stmt: WhileStmt .

    $default  reduce using rule 21 (Stmt)


state 49

   22 Stmt: ForStmt .

    $default  reduce using rule 22 (Stmt)


state 50

   23 Stmt: ReturnStmt .

    $default  reduce using rule 23 (Stmt)


state 51

   24 Stmt: ExprStmt .

    $default  reduce using rule 24 (Stmt)


state 52

   58 ExprStmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 78


state 53

   63 Expr: UnaryExpr . RelOpTail

    LESS_THAN            shift, and go to state 79
    GREATER_THAN         shift, and go to state 80
    LESS_THAN_EQUALS     shift, and go to state 81
    GREATER_THAN_EQUALS  shift, and go to state 82
    EQUALS_EQUALS        shift, and go to state 83
    BANG_EQUALS          shift, and go to state 84

    $default  reduce using rule 65 (RelOpTail)

    RelOpTail  go to state 85
    RelOp      go to state 86


state 54

   72 UnaryExpr: UnaryOpList . SimpleExpr

    IDENTIFIER       shift, and go to state 87
    OPEN_PAREN       shift, and go to state 88
    INTEGER_LITERAL  shift, and go to state 89
    FLOAT_LITERAL    shift, and go to state 90
    CHAR_LITERAL     shift, and go to state 91

    SimpleExpr  go to state 92
    Term        go to state 93
    Factor      go to state 94


state 55

   73 UnaryOpList: UnaryOp . UnaryOpList

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    $default  reduce using rule 74 (UnaryOpList)

    UnaryOpList  go to state 95
    UnaryOp      go to state 55


state 56

   34 AssignTarget: IDENTIFIER OPEN_BRACKET . Expr CLOSED_BRACKET

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    $default  reduce using rule 74 (UnaryOpList)

    Expr         go to state 96
    UnaryExpr    go to state 53
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 57

   35 AssignTarget: STAR IDENTIFIER .

    $default  reduce using rule 35 (AssignTarget)


state 58

   45 IfStmt: KEYWORD_IF OPEN_PAREN . Expr CLOSED_PAREN Body ElseOpt

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    $default  reduce using rule 74 (UnaryOpList)

    Expr         go to state 97
    UnaryExpr    go to state 53
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 59

   48 WhileStmt: KEYWORD_WHILE OPEN_PAREN . Expr CLOSED_PAREN Body

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    $default  reduce using rule 74 (UnaryOpList)

    Expr         go to state 98
    UnaryExpr    go to state 53
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 60

   49 ForStmt: KEYWORD_FOR OPEN_PAREN . ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    IDENTIFIER     shift, and go to state 31
    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10
    STAR           shift, and go to state 32

    $default  reduce using rule 52 (ForInit)

    Type          go to state 39
    BaseType      go to state 14
    VarDeclExpr   go to state 99
    AssignExpr    go to state 100
    AssignTarget  go to state 46
    ForInit       go to state 101


state 61

   57 ReturnStmt: KEYWORD_RET ExprOpt . SEMICOLON

    SEMICOLON  shift, and go to state 102


state 62

   53 ExprOpt: Expr .

    $default  reduce using rule 53 (ExprOpt)


state 63

   27 VarDeclExpr: Type IDENTIFIER . InitOpt

    EQUALS  shift, and go to state 103

    $default  reduce using rule 30 (InitOpt)

    InitOpt  go to state 104


state 64

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY .

    $default  reduce using rule 3 (FunctionDecl)


state 65

   16 StmtList: Stmt StmtList .

    $default  reduce using rule 16 (StmtList)


state 66

   28 VarDeclStmt: VarDeclExpr SEMICOLON .

    $default  reduce using rule 28 (VarDeclStmt)


state 67

   32 AssignStmt: AssignExpr SEMICOLON .

    $default  reduce using rule 32 (AssignStmt)


state 68

   36 AssignOp: EQUALS .

    $default  reduce using rule 36 (AssignOp)


state 69

   37 AssignOp: PLUS_EQUALS .

    $default  reduce using rule 37 (AssignOp)


state 70

   38 AssignOp: MINUS_EQUALS .

    $default  reduce using rule 38 (AssignOp)


state 71

   39 AssignOp: SLASH_EQUALS .

    $default  reduce using rule 39 (AssignOp)


state 72

   40 AssignOp: STAR_EQUALS .

    $default  reduce using rule 40 (AssignOp)


state 73

   41 AssignOp: AMPERSAND_EQUALS .

    $default  reduce using rule 41 (AssignOp)


state 74

   42 AssignOp: PIPE_EQUALS .

    $default  reduce using rule 42 (AssignOp)


state 75

   43 AssignOp: CARET_EQUALS .

    $default  reduce using rule 43 (AssignOp)


state 76

   44 AssignOp: TILDE_EQUALS .

    $default  reduce using rule 44 (AssignOp)


state 77

   31 AssignExpr: AssignTarget AssignOp . Expr

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    $default  reduce using rule 74 (UnaryOpList)

    Expr         go to state 105
    UnaryExpr    go to state 53
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 78

   58 ExprStmt: Expr SEMICOLON .

    $default  reduce using rule 58 (ExprStmt)


state 79

   66 RelOp: LESS_THAN .

    $default  reduce using rule 66 (RelOp)


state 80

   67 RelOp: GREATER_THAN .

    $default  reduce using rule 67 (RelOp)


state 81

   68 RelOp: LESS_THAN_EQUALS .

    $default  reduce using rule 68 (RelOp)


state 82

   69 RelOp: GREATER_THAN_EQUALS .

    $default  reduce using rule 69 (RelOp)


state 83

   70 RelOp: EQUALS_EQUALS .

    $default  reduce using rule 70 (RelOp)


state 84

   71 RelOp: BANG_EQUALS .

    $default  reduce using rule 71 (RelOp)


state 85

   63 Expr: UnaryExpr RelOpTail .

    $default  reduce using rule 63 (Expr)


state 86

   64 RelOpTail: RelOp . UnaryExpr

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    $default  reduce using rule 74 (UnaryOpList)

    UnaryExpr    go to state 106
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 87

   93 Factor: IDENTIFIER .
   97       | IDENTIFIER . FunctionCallOp

    OPEN_PAREN  shift, and go to state 107

    CLOSED_PAREN         reduce using rule 93 (Factor)
    CLOSED_PAREN         [reduce using rule 99 (FunctionCallOp)]
    COMMA                reduce using rule 93 (Factor)
    COMMA                [reduce using rule 99 (FunctionCallOp)]
    CLOSED_BRACKET       reduce using rule 93 (Factor)
    CLOSED_BRACKET       [reduce using rule 99 (FunctionCallOp)]
    STAR                 reduce using rule 93 (Factor)
    STAR                 [reduce using rule 99 (FunctionCallOp)]
    SEMICOLON            reduce using rule 93 (Factor)
    SEMICOLON            [reduce using rule 99 (FunctionCallOp)]
    LESS_THAN            reduce using rule 93 (Factor)
    LESS_THAN            [reduce using rule 99 (FunctionCallOp)]
    GREATER_THAN         reduce using rule 93 (Factor)
    GREATER_THAN         [reduce using rule 99 (FunctionCallOp)]
    LESS_THAN_EQUALS     reduce using rule 93 (Factor)
    LESS_THAN_EQUALS     [reduce using rule 99 (FunctionCallOp)]
    GREATER_THAN_EQUALS  reduce using rule 93 (Factor)
    GREATER_THAN_EQUALS  [reduce using rule 99 (FunctionCallOp)]
    EQUALS_EQUALS        reduce using rule 93 (Factor)
    EQUALS_EQUALS        [reduce using rule 99 (FunctionCallOp)]
    BANG_EQUALS          reduce using rule 93 (Factor)
    BANG_EQUALS          [reduce using rule 99 (FunctionCallOp)]
    MINUS                reduce using rule 93 (Factor)
    MINUS                [reduce using rule 99 (FunctionCallOp)]
    PLUS                 reduce using rule 93 (Factor)
    PLUS                 [reduce using rule 99 (FunctionCallOp)]
    PIPE                 reduce using rule 93 (Factor)
    PIPE                 [reduce using rule 99 (FunctionCallOp)]
    CARET                reduce using rule 93 (Factor)
    CARET                [reduce using rule 99 (FunctionCallOp)]
    PIPE_PIPE            reduce using rule 93 (Factor)
    PIPE_PIPE            [reduce using rule 99 (FunctionCallOp)]
    SLASH                reduce using rule 93 (Factor)
    SLASH                [reduce using rule 99 (FunctionCallOp)]
    AMPERSAND            reduce using rule 93 (Factor)
    AMPERSAND            [reduce using rule 99 (FunctionCallOp)]
    AMPERSAND_AMPERSAND  reduce using rule 93 (Factor)
    AMPERSAND_AMPERSAND  [reduce using rule 99 (FunctionCallOp)]
    $default             reduce using rule 93 (Factor)

    FunctionCallOp  go to state 108


state 88

   92 Factor: OPEN_PAREN . Expr CLOSED_PAREN

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    $default  reduce using rule 74 (UnaryOpList)

    Expr         go to state 109
    UnaryExpr    go to state 53
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 89

   94 Factor: INTEGER_LITERAL .

    $default  reduce using rule 94 (Factor)


state 90

   95 Factor: FLOAT_LITERAL .

    $default  reduce using rule 95 (Factor)


state 91

   96 Factor: CHAR_LITERAL .

    $default  reduce using rule 96 (Factor)


state 92

   72 UnaryExpr: UnaryOpList SimpleExpr .

    $default  reduce using rule 72 (UnaryExpr)


state 93

   77 SimpleExpr: Term . AddOpTail

    MINUS      shift, and go to state 110
    PLUS       shift, and go to state 111
    PIPE       shift, and go to state 112
    CARET      shift, and go to state 113
    PIPE_PIPE  shift, and go to state 114

    $default  reduce using rule 79 (AddOpTail)

    AddOpTail  go to state 115
    AddOp      go to state 116


state 94

   85 Term: Factor . MulOpTail

    STAR                 shift, and go to state 117
    SLASH                shift, and go to state 118
    AMPERSAND            shift, and go to state 119
    AMPERSAND_AMPERSAND  shift, and go to state 120

    $default  reduce using rule 87 (MulOpTail)

    MulOpTail  go to state 121
    MulOp      go to state 122


state 95

   73 UnaryOpList: UnaryOp UnaryOpList .

    $default  reduce using rule 73 (UnaryOpList)


state 96

   34 AssignTarget: IDENTIFIER OPEN_BRACKET Expr . CLOSED_BRACKET

    CLOSED_BRACKET  shift, and go to state 123


state 97

   45 IfStmt: KEYWORD_IF OPEN_PAREN Expr . CLOSED_PAREN Body ElseOpt

    CLOSED_PAREN  shift, and go to state 124


state 98

   48 WhileStmt: KEYWORD_WHILE OPEN_PAREN Expr . CLOSED_PAREN Body

    CLOSED_PAREN  shift, and go to state 125


state 99

   50 ForInit: VarDeclExpr .

    $default  reduce using rule 50 (ForInit)


state 100

   51 ForInit: AssignExpr .

    $default  reduce using rule 51 (ForInit)


state 101

   49 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit . SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    SEMICOLON  shift, and go to state 126


state 102

   57 ReturnStmt: KEYWORD_RET ExprOpt SEMICOLON .

    $default  reduce using rule 57 (ReturnStmt)


state 103

   29 InitOpt: EQUALS . Expr

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    $default  reduce using rule 74 (UnaryOpList)

    Expr         go to state 127
    UnaryExpr    go to state 53
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 104

   27 VarDeclExpr: Type IDENTIFIER InitOpt .

    $default  reduce using rule 27 (VarDeclExpr)


state 105

   31 AssignExpr: AssignTarget AssignOp Expr .

    $default  reduce using rule 31 (AssignExpr)


state 106

   64 RelOpTail: RelOp UnaryExpr .

    $default  reduce using rule 64 (RelOpTail)


state 107

   98 FunctionCallOp: OPEN_PAREN . ExprList CLOSED_PAREN

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    CLOSED_PAREN  reduce using rule 60 (ExprList)
    $default      reduce using rule 74 (UnaryOpList)

    ExprList     go to state 128
    Expr         go to state 129
    UnaryExpr    go to state 53
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 108

   97 Factor: IDENTIFIER FunctionCallOp .

    $default  reduce using rule 97 (Factor)


state 109

   92 Factor: OPEN_PAREN Expr . CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 130


state 110

   81 AddOp: MINUS .

    $default  reduce using rule 81 (AddOp)


state 111

   80 AddOp: PLUS .

    $default  reduce using rule 80 (AddOp)


state 112

   82 AddOp: PIPE .

    $default  reduce using rule 82 (AddOp)


state 113

   83 AddOp: CARET .

    $default  reduce using rule 83 (AddOp)


state 114

   84 AddOp: PIPE_PIPE .

    $default  reduce using rule 84 (AddOp)


state 115

   77 SimpleExpr: Term AddOpTail .

    $default  reduce using rule 77 (SimpleExpr)


state 116

   78 AddOpTail: AddOp . Term AddOpTail

    IDENTIFIER       shift, and go to state 87
    OPEN_PAREN       shift, and go to state 88
    INTEGER_LITERAL  shift, and go to state 89
    FLOAT_LITERAL    shift, and go to state 90
    CHAR_LITERAL     shift, and go to state 91

    Term    go to state 131
    Factor  go to state 94


state 117

   88 MulOp: STAR .

    $default  reduce using rule 88 (MulOp)


state 118

   89 MulOp: SLASH .

    $default  reduce using rule 89 (MulOp)


state 119

   90 MulOp: AMPERSAND .

    $default  reduce using rule 90 (MulOp)


state 120

   91 MulOp: AMPERSAND_AMPERSAND .

    $default  reduce using rule 91 (MulOp)


state 121

   85 Term: Factor MulOpTail .

    $default  reduce using rule 85 (Term)


state 122

   86 MulOpTail: MulOp . Factor MulOpTail

    IDENTIFIER       shift, and go to state 87
    OPEN_PAREN       shift, and go to state 88
    INTEGER_LITERAL  shift, and go to state 89
    FLOAT_LITERAL    shift, and go to state 90
    CHAR_LITERAL     shift, and go to state 91

    Factor  go to state 132


state 123

   34 AssignTarget: IDENTIFIER OPEN_BRACKET Expr CLOSED_BRACKET .

    $default  reduce using rule 34 (AssignTarget)


state 124

   45 IfStmt: KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN . Body ElseOpt

    IDENTIFIER     shift, and go to state 31
    OPEN_CURLY     shift, and go to state 133
    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10
    STAR           shift, and go to state 32
    KEYWORD_IF     shift, and go to state 33
    KEYWORD_WHILE  shift, and go to state 34
    KEYWORD_FOR    shift, and go to state 35
    KEYWORD_RET    shift, and go to state 36
    MINUS          shift, and go to state 37
    BANG           shift, and go to state 38

    IDENTIFIER  [reduce using rule 74 (UnaryOpList)]
    $default    reduce using rule 74 (UnaryOpList)

    Type          go to state 39
    BaseType      go to state 14
    Stmt          go to state 134
    Body          go to state 135
    VarDeclExpr   go to state 42
    VarDeclStmt   go to state 43
    AssignExpr    go to state 44
    AssignStmt    go to state 45
    AssignTarget  go to state 46
    IfStmt        go to state 47
    WhileStmt     go to state 48
    ForStmt       go to state 49
    ReturnStmt    go to state 50
    ExprStmt      go to state 51
    Expr          go to state 52
    UnaryExpr     go to state 53
    UnaryOpList   go to state 54
    UnaryOp       go to state 55


state 125

   48 WhileStmt: KEYWORD_WHILE OPEN_PAREN Expr CLOSED_PAREN . Body

    IDENTIFIER     shift, and go to state 31
    OPEN_CURLY     shift, and go to state 133
    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10
    STAR           shift, and go to state 32
    KEYWORD_IF     shift, and go to state 33
    KEYWORD_WHILE  shift, and go to state 34
    KEYWORD_FOR    shift, and go to state 35
    KEYWORD_RET    shift, and go to state 36
    MINUS          shift, and go to state 37
    BANG           shift, and go to state 38

    IDENTIFIER  [reduce using rule 74 (UnaryOpList)]
    $default    reduce using rule 74 (UnaryOpList)

    Type          go to state 39
    BaseType      go to state 14
    Stmt          go to state 134
    Body          go to state 136
    VarDeclExpr   go to state 42
    VarDeclStmt   go to state 43
    AssignExpr    go to state 44
    AssignStmt    go to state 45
    AssignTarget  go to state 46
    IfStmt        go to state 47
    WhileStmt     go to state 48
    ForStmt       go to state 49
    ReturnStmt    go to state 50
    ExprStmt      go to state 51
    Expr          go to state 52
    UnaryExpr     go to state 53
    UnaryOpList   go to state 54
    UnaryOp       go to state 55


state 126

   49 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON . ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    SEMICOLON  reduce using rule 54 (ExprOpt)
    $default   reduce using rule 74 (UnaryOpList)

    ExprOpt      go to state 137
    Expr         go to state 62
    UnaryExpr    go to state 53
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 127

   29 InitOpt: EQUALS Expr .

    $default  reduce using rule 29 (InitOpt)


state 128

   98 FunctionCallOp: OPEN_PAREN ExprList . CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 138


state 129

   59 ExprList: Expr . ExprTail

    COMMA  shift, and go to state 139

    $default  reduce using rule 62 (ExprTail)

    ExprTail  go to state 140


state 130

   92 Factor: OPEN_PAREN Expr CLOSED_PAREN .

    $default  reduce using rule 92 (Factor)


state 131

   78 AddOpTail: AddOp Term . AddOpTail

    MINUS      shift, and go to state 110
    PLUS       shift, and go to state 111
    PIPE       shift, and go to state 112
    CARET      shift, and go to state 113
    PIPE_PIPE  shift, and go to state 114

    $default  reduce using rule 79 (AddOpTail)

    AddOpTail  go to state 141
    AddOp      go to state 116


state 132

   86 MulOpTail: MulOp Factor . MulOpTail

    STAR                 shift, and go to state 117
    SLASH                shift, and go to state 118
    AMPERSAND            shift, and go to state 119
    AMPERSAND_AMPERSAND  shift, and go to state 120

    $default  reduce using rule 87 (MulOpTail)

    MulOpTail  go to state 142
    MulOp      go to state 122


state 133

   25 Body: OPEN_CURLY . StmtList CLOSED_CURLY

    IDENTIFIER     shift, and go to state 31
    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10
    STAR           shift, and go to state 32
    KEYWORD_IF     shift, and go to state 33
    KEYWORD_WHILE  shift, and go to state 34
    KEYWORD_FOR    shift, and go to state 35
    KEYWORD_RET    shift, and go to state 36
    MINUS          shift, and go to state 37
    BANG           shift, and go to state 38

    IDENTIFIER    [reduce using rule 74 (UnaryOpList)]
    CLOSED_CURLY  reduce using rule 17 (StmtList)
    $default      reduce using rule 74 (UnaryOpList)

    Type          go to state 39
    BaseType      go to state 14
    StmtList      go to state 143
    Stmt          go to state 41
    VarDeclExpr   go to state 42
    VarDeclStmt   go to state 43
    AssignExpr    go to state 44
    AssignStmt    go to state 45
    AssignTarget  go to state 46
    IfStmt        go to state 47
    WhileStmt     go to state 48
    ForStmt       go to state 49
    ReturnStmt    go to state 50
    ExprStmt      go to state 51
    Expr          go to state 52
    UnaryExpr     go to state 53
    UnaryOpList   go to state 54
    UnaryOp       go to state 55


state 134

   26 Body: Stmt .

    $default  reduce using rule 26 (Body)


state 135

   45 IfStmt: KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN Body . ElseOpt

    KEYWORD_ELSE  shift, and go to state 144

    KEYWORD_ELSE  [reduce using rule 47 (ElseOpt)]
    $default      reduce using rule 47 (ElseOpt)

    ElseOpt  go to state 145


state 136

   48 WhileStmt: KEYWORD_WHILE OPEN_PAREN Expr CLOSED_PAREN Body .

    $default  reduce using rule 48 (WhileStmt)


state 137

   49 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt . SEMICOLON ForUpdate CLOSED_PAREN Body

    SEMICOLON  shift, and go to state 146


state 138

   98 FunctionCallOp: OPEN_PAREN ExprList CLOSED_PAREN .

    $default  reduce using rule 98 (FunctionCallOp)


state 139

   61 ExprTail: COMMA . Expr ExprTail

    MINUS  shift, and go to state 37
    BANG   shift, and go to state 38

    $default  reduce using rule 74 (UnaryOpList)

    Expr         go to state 147
    UnaryExpr    go to state 53
    UnaryOpList  go to state 54
    UnaryOp      go to state 55


state 140

   59 ExprList: Expr ExprTail .

    $default  reduce using rule 59 (ExprList)


state 141

   78 AddOpTail: AddOp Term AddOpTail .

    $default  reduce using rule 78 (AddOpTail)


state 142

   86 MulOpTail: MulOp Factor MulOpTail .

    $default  reduce using rule 86 (MulOpTail)


state 143

   25 Body: OPEN_CURLY StmtList . CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 148


state 144

   46 ElseOpt: KEYWORD_ELSE . Body

    IDENTIFIER     shift, and go to state 31
    OPEN_CURLY     shift, and go to state 133
    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10
    STAR           shift, and go to state 32
    KEYWORD_IF     shift, and go to state 33
    KEYWORD_WHILE  shift, and go to state 34
    KEYWORD_FOR    shift, and go to state 35
    KEYWORD_RET    shift, and go to state 36
    MINUS          shift, and go to state 37
    BANG           shift, and go to state 38

    IDENTIFIER  [reduce using rule 74 (UnaryOpList)]
    $default    reduce using rule 74 (UnaryOpList)

    Type          go to state 39
    BaseType      go to state 14
    Stmt          go to state 134
    Body          go to state 149
    VarDeclExpr   go to state 42
    VarDeclStmt   go to state 43
    AssignExpr    go to state 44
    AssignStmt    go to state 45
    AssignTarget  go to state 46
    IfStmt        go to state 47
    WhileStmt     go to state 48
    ForStmt       go to state 49
    ReturnStmt    go to state 50
    ExprStmt      go to state 51
    Expr          go to state 52
    UnaryExpr     go to state 53
    UnaryOpList   go to state 54
    UnaryOp       go to state 55


state 145

   45 IfStmt: KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN Body ElseOpt .

    $default  reduce using rule 45 (IfStmt)


state 146

   49 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON . ForUpdate CLOSED_PAREN Body

    IDENTIFIER  shift, and go to state 31
    STAR        shift, and go to state 32

    $default  reduce using rule 56 (ForUpdate)

    AssignExpr    go to state 150
    AssignTarget  go to state 46
    ForUpdate     go to state 151


state 147

   61 ExprTail: COMMA Expr . ExprTail

    COMMA  shift, and go to state 139

    $default  reduce using rule 62 (ExprTail)

    ExprTail  go to state 152


state 148

   25 Body: OPEN_CURLY StmtList CLOSED_CURLY .

    $default  reduce using rule 25 (Body)


state 149

   46 ElseOpt: KEYWORD_ELSE Body .

    $default  reduce using rule 46 (ElseOpt)


state 150

   55 ForUpdate: AssignExpr .

    $default  reduce using rule 55 (ForUpdate)


state 151

   49 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate . CLOSED_PAREN Body

    CLOSED_PAREN  shift, and go to state 153


state 152

   61 ExprTail: COMMA Expr ExprTail .

    $default  reduce using rule 61 (ExprTail)


state 153

   49 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN . Body

    IDENTIFIER     shift, and go to state 31
    OPEN_CURLY     shift, and go to state 133
    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10
    STAR           shift, and go to state 32
    KEYWORD_IF     shift, and go to state 33
    KEYWORD_WHILE  shift, and go to state 34
    KEYWORD_FOR    shift, and go to state 35
    KEYWORD_RET    shift, and go to state 36
    MINUS          shift, and go to state 37
    BANG           shift, and go to state 38

    IDENTIFIER  [reduce using rule 74 (UnaryOpList)]
    $default    reduce using rule 74 (UnaryOpList)

    Type          go to state 39
    BaseType      go to state 14
    Stmt          go to state 134
    Body          go to state 154
    VarDeclExpr   go to state 42
    VarDeclStmt   go to state 43
    AssignExpr    go to state 44
    AssignStmt    go to state 45
    AssignTarget  go to state 46
    IfStmt        go to state 47
    WhileStmt     go to state 48
    ForStmt       go to state 49
    ReturnStmt    go to state 50
    ExprStmt      go to state 51
    Expr          go to state 52
    UnaryExpr     go to state 53
    UnaryOpList   go to state 54
    UnaryOp       go to state 55


state 154

   49 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body .

    $default  reduce using rule 49 (ForStmt)
