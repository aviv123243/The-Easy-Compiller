Grammar

    0 $accept: Program $end

    1 Program: FunctionDecl Program
    2        | ε

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    4 ParamList: Param ParamTail
    5          | ε

    6 ParamTail: COMMA Param ParamTail
    7          | ε

    8 Param: Type IDENTIFIER

    9 Type: BaseType TypeTail

   10 BaseType: KEYWORD_INT
   11         | KEYWORD_FLOAT
   12         | KEYWORD_CHAR

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL CLOSED_BRACKET
   14         | STAR
   15         | ε

   16 StmtList: Stmt StmtList
   17         | ε

   18 Stmt: VarDeclStmt
   19     | AssignStmt
   20     | IfStmt
   21     | WhileStmt
   22     | ForStmt
   23     | ReturnStmt
   24     | ExprStmt

   25 Body: OPEN_CURLY StmtList CLOSED_CURLY
   26     | Stmt

   27 VarDeclStmt: VarDeclExpr SEMICOLON

   28 VarDeclExpr: Type IDENTIFIER InitOpt

   29 InitOpt: EQUALS AssignValue
   30        | ε

   31 AssignValue: Expr
   32            | OPEN_CURLY ExprList CLOSED_CURLY

   33 AssignStmt: AssignExpr SEMICOLON

   34 AssignExpr: AssignTarget AssignOp Expr

   35 AssignTarget: IDENTIFIER
   36             | IDENTIFIER OPEN_BRACKET Expr CLOSED_BRACKET
   37             | STAR IDENTIFIER

   38 AssignOp: EQUALS
   39         | PLUS_EQUALS
   40         | MINUS_EQUALS
   41         | SLASH_EQUALS
   42         | STAR_EQUALS
   43         | AMPERSAND_EQUALS
   44         | PIPE_EQUALS
   45         | CARET_EQUALS
   46         | TILDE_EQUALS

   47 IfStmt: KEYWORD_IF OPEN_PAREN ConditionOp CLOSED_PAREN Body
   48       | KEYWORD_IF OPEN_PAREN ConditionOp CLOSED_PAREN Body KEYWORD_ELSE Body

   49 WhileStmt: KEYWORD_WHILE OPEN_PAREN ConditionOp CLOSED_PAREN Body

   50 ConditionOp: Expr
   51            | AssignExpr

   52 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

   53 ForInit: VarDeclExpr
   54        | AssignExpr
   55        | ε

   56 ExprOpt: Expr
   57        | ε

   58 ForUpdate: AssignExpr
   59          | ε

   60 ReturnStmt: KEYWORD_RET ExprOpt SEMICOLON

   61 ExprStmt: Expr SEMICOLON

   62 ExprList: Expr ExprTail
   63         | ε

   64 ExprTail: COMMA Expr ExprTail
   65         | ε

   66 Expr: UnaryExpr RelOpTail
   67     | PointerRefExpr

   68 RelOpTail: RelOp UnaryExpr RelOpTail
   69          | ε

   70 RelOp: LESS_THAN
   71      | GREATER_THAN
   72      | LESS_THAN_EQUALS
   73      | GREATER_THAN_EQUALS
   74      | EQUALS_EQUALS
   75      | BANG_EQUALS

   76 UnaryExpr: UnaryOp UnaryExpr
   77          | PostIncrement
   78          | PreIncrement
   79          | SimpleExpr

   80 PointerRefExpr: AMPERSAND IDENTIFIER
   81               | STAR IDENTIFIER

   82 PostIncrement: IDENTIFIER PLUS_PLUS
   83              | IDENTIFIER MINUS_MINUS

   84 PreIncrement: PLUS_PLUS IDENTIFIER
   85             | MINUS_MINUS IDENTIFIER

   86 UnaryOp: MINUS
   87        | BANG

   88 SimpleExpr: Term AddOpTail

   89 AddOpTail: AddOp Term AddOpTail
   90          | ε

   91 AddOp: PLUS
   92      | MINUS
   93      | PIPE
   94      | CARET
   95      | PIPE_PIPE

   96 Term: Factor MulOpTail

   97 MulOpTail: MulOp Factor MulOpTail
   98          | ε

   99 MulOp: STAR
  100      | SLASH
  101      | AMPERSAND
  102      | AMPERSAND_AMPERSAND

  103 Factor: OPEN_PAREN Expr CLOSED_PAREN
  104       | IDENTIFIER
  105       | INTEGER_LITERAL
  106       | FLOAT_LITERAL
  107       | CHAR_LITERAL
  108       | IDENTIFIER OPEN_PAREN ExprList CLOSED_PAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    KEYWORD_FN (258) 3
    IDENTIFIER (259) 3 8 28 35 36 37 80 81 82 83 84 85 104 108
    OPEN_PAREN (260) 3 47 48 49 52 103 108
    CLOSED_PAREN (261) 3 47 48 49 52 103 108
    RIGHT_ARROW (262) 3
    OPEN_CURLY (263) 3 25 32
    CLOSED_CURLY (264) 3 25 32
    COMMA (265) 6 64
    KEYWORD_INT (266) 10
    KEYWORD_FLOAT (267) 11
    KEYWORD_CHAR (268) 12
    OPEN_BRACKET (269) 13 36
    CLOSED_BRACKET (270) 13 36
    STAR (271) 14 37 81 99
    SEMICOLON (272) 27 33 52 60 61
    EQUALS (273) 29 38
    PLUS_EQUALS (274) 39
    MINUS_EQUALS (275) 40
    SLASH_EQUALS (276) 41
    STAR_EQUALS (277) 42
    AMPERSAND_EQUALS (278) 43
    PIPE_EQUALS (279) 44
    CARET_EQUALS (280) 45
    TILDE_EQUALS (281) 46
    KEYWORD_IF (282) 47 48
    KEYWORD_ELSE (283) 48
    KEYWORD_WHILE (284) 49
    KEYWORD_FOR (285) 52
    KEYWORD_RET (286) 60
    LESS_THAN (287) 70
    GREATER_THAN (288) 71
    LESS_THAN_EQUALS (289) 72
    GREATER_THAN_EQUALS (290) 73
    EQUALS_EQUALS (291) 74
    BANG_EQUALS (292) 75
    MINUS (293) 86 92
    BANG (294) 87
    PLUS (295) 91
    PIPE (296) 93
    CARET (297) 94
    PIPE_PIPE (298) 95
    SLASH (299) 100
    AMPERSAND (300) 80 101
    AMPERSAND_AMPERSAND (301) 102
    INTEGER_LITERAL (302) 13 105
    FLOAT_LITERAL (303) 106
    CHAR_LITERAL (304) 107
    PLUS_PLUS (305) 82 84
    MINUS_MINUS (306) 83 85
    THEN (307)


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    Program (54)
        on left: 1 2
        on right: 0 1
    FunctionDecl (55)
        on left: 3
        on right: 1
    ParamList (56)
        on left: 4 5
        on right: 3
    ParamTail (57)
        on left: 6 7
        on right: 4 6
    Param (58)
        on left: 8
        on right: 4 6
    Type (59)
        on left: 9
        on right: 3 8 28
    BaseType (60)
        on left: 10 11 12
        on right: 9
    TypeTail (61)
        on left: 13 14 15
        on right: 9
    StmtList (62)
        on left: 16 17
        on right: 3 16 25
    Stmt (63)
        on left: 18 19 20 21 22 23 24
        on right: 16 26
    Body (64)
        on left: 25 26
        on right: 47 48 49 52
    VarDeclStmt (65)
        on left: 27
        on right: 18
    VarDeclExpr (66)
        on left: 28
        on right: 27 53
    InitOpt (67)
        on left: 29 30
        on right: 28
    AssignValue (68)
        on left: 31 32
        on right: 29
    AssignStmt (69)
        on left: 33
        on right: 19
    AssignExpr (70)
        on left: 34
        on right: 33 51 54 58
    AssignTarget (71)
        on left: 35 36 37
        on right: 34
    AssignOp (72)
        on left: 38 39 40 41 42 43 44 45 46
        on right: 34
    IfStmt (73)
        on left: 47 48
        on right: 20
    WhileStmt (74)
        on left: 49
        on right: 21
    ConditionOp (75)
        on left: 50 51
        on right: 47 48 49
    ForStmt (76)
        on left: 52
        on right: 22
    ForInit (77)
        on left: 53 54 55
        on right: 52
    ExprOpt (78)
        on left: 56 57
        on right: 52 60
    ForUpdate (79)
        on left: 58 59
        on right: 52
    ReturnStmt (80)
        on left: 60
        on right: 23
    ExprStmt (81)
        on left: 61
        on right: 24
    ExprList (82)
        on left: 62 63
        on right: 32 108
    ExprTail (83)
        on left: 64 65
        on right: 62 64
    Expr (84)
        on left: 66 67
        on right: 31 34 36 50 56 61 62 64 103
    RelOpTail (85)
        on left: 68 69
        on right: 66 68
    RelOp (86)
        on left: 70 71 72 73 74 75
        on right: 68
    UnaryExpr (87)
        on left: 76 77 78 79
        on right: 66 68 76
    PointerRefExpr (88)
        on left: 80 81
        on right: 67
    PostIncrement (89)
        on left: 82 83
        on right: 77
    PreIncrement (90)
        on left: 84 85
        on right: 78
    UnaryOp (91)
        on left: 86 87
        on right: 76
    SimpleExpr (92)
        on left: 88
        on right: 79
    AddOpTail (93)
        on left: 89 90
        on right: 88 89
    AddOp (94)
        on left: 91 92 93 94 95
        on right: 89
    Term (95)
        on left: 96
        on right: 88 89
    MulOpTail (96)
        on left: 97 98
        on right: 96 97
    MulOp (97)
        on left: 99 100 101 102
        on right: 97
    Factor (98)
        on left: 103 104 105 106 107 108
        on right: 96 97


State 0

    0 $accept: • Program $end

    KEYWORD_FN  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program       go to state 2
    FunctionDecl  go to state 3


State 1

    3 FunctionDecl: KEYWORD_FN • IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 5


State 3

    1 Program: FunctionDecl • Program

    KEYWORD_FN  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program       go to state 6
    FunctionDecl  go to state 3


State 4

    3 FunctionDecl: KEYWORD_FN IDENTIFIER • OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    OPEN_PAREN  shift, and go to state 7


State 5

    0 $accept: Program $end •

    $default  accept


State 6

    1 Program: FunctionDecl Program •

    $default  reduce using rule 1 (Program)


State 7

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN • ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10

    $default  reduce using rule 5 (ParamList)

    ParamList  go to state 11
    Param      go to state 12
    Type       go to state 13
    BaseType   go to state 14


State 8

   10 BaseType: KEYWORD_INT •

    $default  reduce using rule 10 (BaseType)


State 9

   11 BaseType: KEYWORD_FLOAT •

    $default  reduce using rule 11 (BaseType)


State 10

   12 BaseType: KEYWORD_CHAR •

    $default  reduce using rule 12 (BaseType)


State 11

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList • CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    CLOSED_PAREN  shift, and go to state 15


State 12

    4 ParamList: Param • ParamTail

    COMMA  shift, and go to state 16

    $default  reduce using rule 7 (ParamTail)

    ParamTail  go to state 17


State 13

    8 Param: Type • IDENTIFIER

    IDENTIFIER  shift, and go to state 18


State 14

    9 Type: BaseType • TypeTail

    OPEN_BRACKET  shift, and go to state 19
    STAR          shift, and go to state 20

    $default  reduce using rule 15 (TypeTail)

    TypeTail  go to state 21


State 15

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN • RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    RIGHT_ARROW  shift, and go to state 22


State 16

    6 ParamTail: COMMA • Param ParamTail

    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10

    Param     go to state 23
    Type      go to state 13
    BaseType  go to state 14


State 17

    4 ParamList: Param ParamTail •

    $default  reduce using rule 4 (ParamList)


State 18

    8 Param: Type IDENTIFIER •

    $default  reduce using rule 8 (Param)


State 19

   13 TypeTail: OPEN_BRACKET • INTEGER_LITERAL CLOSED_BRACKET

    INTEGER_LITERAL  shift, and go to state 24


State 20

   14 TypeTail: STAR •

    $default  reduce using rule 14 (TypeTail)


State 21

    9 Type: BaseType TypeTail •

    $default  reduce using rule 9 (Type)


State 22

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW • Type OPEN_CURLY StmtList CLOSED_CURLY

    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10

    Type      go to state 25
    BaseType  go to state 14


State 23

    6 ParamTail: COMMA Param • ParamTail

    COMMA  shift, and go to state 16

    $default  reduce using rule 7 (ParamTail)

    ParamTail  go to state 26


State 24

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL • CLOSED_BRACKET

    CLOSED_BRACKET  shift, and go to state 27


State 25

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type • OPEN_CURLY StmtList CLOSED_CURLY

    OPEN_CURLY  shift, and go to state 28


State 26

    6 ParamTail: COMMA Param ParamTail •

    $default  reduce using rule 6 (ParamTail)


State 27

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL CLOSED_BRACKET •

    $default  reduce using rule 13 (TypeTail)


State 28

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY • StmtList CLOSED_CURLY

    IDENTIFIER       shift, and go to state 29
    OPEN_PAREN       shift, and go to state 30
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 31
    KEYWORD_IF       shift, and go to state 32
    KEYWORD_WHILE    shift, and go to state 33
    KEYWORD_FOR      shift, and go to state 34
    KEYWORD_RET      shift, and go to state 35
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    $default  reduce using rule 17 (StmtList)

    Type            go to state 44
    BaseType        go to state 14
    StmtList        go to state 45
    Stmt            go to state 46
    VarDeclStmt     go to state 47
    VarDeclExpr     go to state 48
    AssignStmt      go to state 49
    AssignExpr      go to state 50
    AssignTarget    go to state 51
    IfStmt          go to state 52
    WhileStmt       go to state 53
    ForStmt         go to state 54
    ReturnStmt      go to state 55
    ExprStmt        go to state 56
    Expr            go to state 57
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 29

   35 AssignTarget: IDENTIFIER •
   36             | IDENTIFIER • OPEN_BRACKET Expr CLOSED_BRACKET
   82 PostIncrement: IDENTIFIER • PLUS_PLUS
   83              | IDENTIFIER • MINUS_MINUS
  104 Factor: IDENTIFIER •
  108       | IDENTIFIER • OPEN_PAREN ExprList CLOSED_PAREN

    OPEN_PAREN    shift, and go to state 66
    OPEN_BRACKET  shift, and go to state 67
    PLUS_PLUS     shift, and go to state 68
    MINUS_MINUS   shift, and go to state 69

    EQUALS            reduce using rule 35 (AssignTarget)
    PLUS_EQUALS       reduce using rule 35 (AssignTarget)
    MINUS_EQUALS      reduce using rule 35 (AssignTarget)
    SLASH_EQUALS      reduce using rule 35 (AssignTarget)
    STAR_EQUALS       reduce using rule 35 (AssignTarget)
    AMPERSAND_EQUALS  reduce using rule 35 (AssignTarget)
    PIPE_EQUALS       reduce using rule 35 (AssignTarget)
    CARET_EQUALS      reduce using rule 35 (AssignTarget)
    TILDE_EQUALS      reduce using rule 35 (AssignTarget)
    $default          reduce using rule 104 (Factor)


State 30

  103 Factor: OPEN_PAREN • Expr CLOSED_PAREN

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    STAR             shift, and go to state 71
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    Expr            go to state 72
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 31

   37 AssignTarget: STAR • IDENTIFIER
   81 PointerRefExpr: STAR • IDENTIFIER

    IDENTIFIER  shift, and go to state 73


State 32

   47 IfStmt: KEYWORD_IF • OPEN_PAREN ConditionOp CLOSED_PAREN Body
   48       | KEYWORD_IF • OPEN_PAREN ConditionOp CLOSED_PAREN Body KEYWORD_ELSE Body

    OPEN_PAREN  shift, and go to state 74


State 33

   49 WhileStmt: KEYWORD_WHILE • OPEN_PAREN ConditionOp CLOSED_PAREN Body

    OPEN_PAREN  shift, and go to state 75


State 34

   52 ForStmt: KEYWORD_FOR • OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    OPEN_PAREN  shift, and go to state 76


State 35

   60 ReturnStmt: KEYWORD_RET • ExprOpt SEMICOLON

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    STAR             shift, and go to state 71
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    $default  reduce using rule 57 (ExprOpt)

    ExprOpt         go to state 77
    Expr            go to state 78
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 36

   86 UnaryOp: MINUS •

    $default  reduce using rule 86 (UnaryOp)


State 37

   87 UnaryOp: BANG •

    $default  reduce using rule 87 (UnaryOp)


State 38

   80 PointerRefExpr: AMPERSAND • IDENTIFIER

    IDENTIFIER  shift, and go to state 79


State 39

  105 Factor: INTEGER_LITERAL •

    $default  reduce using rule 105 (Factor)


State 40

  106 Factor: FLOAT_LITERAL •

    $default  reduce using rule 106 (Factor)


State 41

  107 Factor: CHAR_LITERAL •

    $default  reduce using rule 107 (Factor)


State 42

   84 PreIncrement: PLUS_PLUS • IDENTIFIER

    IDENTIFIER  shift, and go to state 80


State 43

   85 PreIncrement: MINUS_MINUS • IDENTIFIER

    IDENTIFIER  shift, and go to state 81


State 44

   28 VarDeclExpr: Type • IDENTIFIER InitOpt

    IDENTIFIER  shift, and go to state 82


State 45

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList • CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 83


State 46

   16 StmtList: Stmt • StmtList

    IDENTIFIER       shift, and go to state 29
    OPEN_PAREN       shift, and go to state 30
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 31
    KEYWORD_IF       shift, and go to state 32
    KEYWORD_WHILE    shift, and go to state 33
    KEYWORD_FOR      shift, and go to state 34
    KEYWORD_RET      shift, and go to state 35
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    $default  reduce using rule 17 (StmtList)

    Type            go to state 44
    BaseType        go to state 14
    StmtList        go to state 84
    Stmt            go to state 46
    VarDeclStmt     go to state 47
    VarDeclExpr     go to state 48
    AssignStmt      go to state 49
    AssignExpr      go to state 50
    AssignTarget    go to state 51
    IfStmt          go to state 52
    WhileStmt       go to state 53
    ForStmt         go to state 54
    ReturnStmt      go to state 55
    ExprStmt        go to state 56
    Expr            go to state 57
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 47

   18 Stmt: VarDeclStmt •

    $default  reduce using rule 18 (Stmt)


State 48

   27 VarDeclStmt: VarDeclExpr • SEMICOLON

    SEMICOLON  shift, and go to state 85


State 49

   19 Stmt: AssignStmt •

    $default  reduce using rule 19 (Stmt)


State 50

   33 AssignStmt: AssignExpr • SEMICOLON

    SEMICOLON  shift, and go to state 86


State 51

   34 AssignExpr: AssignTarget • AssignOp Expr

    EQUALS            shift, and go to state 87
    PLUS_EQUALS       shift, and go to state 88
    MINUS_EQUALS      shift, and go to state 89
    SLASH_EQUALS      shift, and go to state 90
    STAR_EQUALS       shift, and go to state 91
    AMPERSAND_EQUALS  shift, and go to state 92
    PIPE_EQUALS       shift, and go to state 93
    CARET_EQUALS      shift, and go to state 94
    TILDE_EQUALS      shift, and go to state 95

    AssignOp  go to state 96


State 52

   20 Stmt: IfStmt •

    $default  reduce using rule 20 (Stmt)


State 53

   21 Stmt: WhileStmt •

    $default  reduce using rule 21 (Stmt)


State 54

   22 Stmt: ForStmt •

    $default  reduce using rule 22 (Stmt)


State 55

   23 Stmt: ReturnStmt •

    $default  reduce using rule 23 (Stmt)


State 56

   24 Stmt: ExprStmt •

    $default  reduce using rule 24 (Stmt)


State 57

   61 ExprStmt: Expr • SEMICOLON

    SEMICOLON  shift, and go to state 97


State 58

   66 Expr: UnaryExpr • RelOpTail

    LESS_THAN            shift, and go to state 98
    GREATER_THAN         shift, and go to state 99
    LESS_THAN_EQUALS     shift, and go to state 100
    GREATER_THAN_EQUALS  shift, and go to state 101
    EQUALS_EQUALS        shift, and go to state 102
    BANG_EQUALS          shift, and go to state 103

    $default  reduce using rule 69 (RelOpTail)

    RelOpTail  go to state 104
    RelOp      go to state 105


State 59

   67 Expr: PointerRefExpr •

    $default  reduce using rule 67 (Expr)


State 60

   77 UnaryExpr: PostIncrement •

    $default  reduce using rule 77 (UnaryExpr)


State 61

   78 UnaryExpr: PreIncrement •

    $default  reduce using rule 78 (UnaryExpr)


State 62

   76 UnaryExpr: UnaryOp • UnaryExpr

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    UnaryExpr      go to state 106
    PostIncrement  go to state 60
    PreIncrement   go to state 61
    UnaryOp        go to state 62
    SimpleExpr     go to state 63
    Term           go to state 64
    Factor         go to state 65


State 63

   79 UnaryExpr: SimpleExpr •

    $default  reduce using rule 79 (UnaryExpr)


State 64

   88 SimpleExpr: Term • AddOpTail

    MINUS      shift, and go to state 107
    PLUS       shift, and go to state 108
    PIPE       shift, and go to state 109
    CARET      shift, and go to state 110
    PIPE_PIPE  shift, and go to state 111

    $default  reduce using rule 90 (AddOpTail)

    AddOpTail  go to state 112
    AddOp      go to state 113


State 65

   96 Term: Factor • MulOpTail

    STAR                 shift, and go to state 114
    SLASH                shift, and go to state 115
    AMPERSAND            shift, and go to state 116
    AMPERSAND_AMPERSAND  shift, and go to state 117

    $default  reduce using rule 98 (MulOpTail)

    MulOpTail  go to state 118
    MulOp      go to state 119


State 66

  108 Factor: IDENTIFIER OPEN_PAREN • ExprList CLOSED_PAREN

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    STAR             shift, and go to state 71
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    $default  reduce using rule 63 (ExprList)

    ExprList        go to state 120
    Expr            go to state 121
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 67

   36 AssignTarget: IDENTIFIER OPEN_BRACKET • Expr CLOSED_BRACKET

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    STAR             shift, and go to state 71
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    Expr            go to state 122
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 68

   82 PostIncrement: IDENTIFIER PLUS_PLUS •

    $default  reduce using rule 82 (PostIncrement)


State 69

   83 PostIncrement: IDENTIFIER MINUS_MINUS •

    $default  reduce using rule 83 (PostIncrement)


State 70

   82 PostIncrement: IDENTIFIER • PLUS_PLUS
   83              | IDENTIFIER • MINUS_MINUS
  104 Factor: IDENTIFIER •
  108       | IDENTIFIER • OPEN_PAREN ExprList CLOSED_PAREN

    OPEN_PAREN   shift, and go to state 66
    PLUS_PLUS    shift, and go to state 68
    MINUS_MINUS  shift, and go to state 69

    $default  reduce using rule 104 (Factor)


State 71

   81 PointerRefExpr: STAR • IDENTIFIER

    IDENTIFIER  shift, and go to state 123


State 72

  103 Factor: OPEN_PAREN Expr • CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 124


State 73

   37 AssignTarget: STAR IDENTIFIER •
   81 PointerRefExpr: STAR IDENTIFIER •

    CLOSED_PAREN  reduce using rule 81 (PointerRefExpr)
    SEMICOLON     reduce using rule 81 (PointerRefExpr)
    $default      reduce using rule 37 (AssignTarget)


State 74

   47 IfStmt: KEYWORD_IF OPEN_PAREN • ConditionOp CLOSED_PAREN Body
   48       | KEYWORD_IF OPEN_PAREN • ConditionOp CLOSED_PAREN Body KEYWORD_ELSE Body

    IDENTIFIER       shift, and go to state 29
    OPEN_PAREN       shift, and go to state 30
    STAR             shift, and go to state 31
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    AssignExpr      go to state 125
    AssignTarget    go to state 51
    ConditionOp     go to state 126
    Expr            go to state 127
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 75

   49 WhileStmt: KEYWORD_WHILE OPEN_PAREN • ConditionOp CLOSED_PAREN Body

    IDENTIFIER       shift, and go to state 29
    OPEN_PAREN       shift, and go to state 30
    STAR             shift, and go to state 31
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    AssignExpr      go to state 125
    AssignTarget    go to state 51
    ConditionOp     go to state 128
    Expr            go to state 127
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 76

   52 ForStmt: KEYWORD_FOR OPEN_PAREN • ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    IDENTIFIER     shift, and go to state 129
    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10
    STAR           shift, and go to state 130

    $default  reduce using rule 55 (ForInit)

    Type          go to state 44
    BaseType      go to state 14
    VarDeclExpr   go to state 131
    AssignExpr    go to state 132
    AssignTarget  go to state 51
    ForInit       go to state 133


State 77

   60 ReturnStmt: KEYWORD_RET ExprOpt • SEMICOLON

    SEMICOLON  shift, and go to state 134


State 78

   56 ExprOpt: Expr •

    $default  reduce using rule 56 (ExprOpt)


State 79

   80 PointerRefExpr: AMPERSAND IDENTIFIER •

    $default  reduce using rule 80 (PointerRefExpr)


State 80

   84 PreIncrement: PLUS_PLUS IDENTIFIER •

    $default  reduce using rule 84 (PreIncrement)


State 81

   85 PreIncrement: MINUS_MINUS IDENTIFIER •

    $default  reduce using rule 85 (PreIncrement)


State 82

   28 VarDeclExpr: Type IDENTIFIER • InitOpt

    EQUALS  shift, and go to state 135

    $default  reduce using rule 30 (InitOpt)

    InitOpt  go to state 136


State 83

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY •

    $default  reduce using rule 3 (FunctionDecl)


State 84

   16 StmtList: Stmt StmtList •

    $default  reduce using rule 16 (StmtList)


State 85

   27 VarDeclStmt: VarDeclExpr SEMICOLON •

    $default  reduce using rule 27 (VarDeclStmt)


State 86

   33 AssignStmt: AssignExpr SEMICOLON •

    $default  reduce using rule 33 (AssignStmt)


State 87

   38 AssignOp: EQUALS •

    $default  reduce using rule 38 (AssignOp)


State 88

   39 AssignOp: PLUS_EQUALS •

    $default  reduce using rule 39 (AssignOp)


State 89

   40 AssignOp: MINUS_EQUALS •

    $default  reduce using rule 40 (AssignOp)


State 90

   41 AssignOp: SLASH_EQUALS •

    $default  reduce using rule 41 (AssignOp)


State 91

   42 AssignOp: STAR_EQUALS •

    $default  reduce using rule 42 (AssignOp)


State 92

   43 AssignOp: AMPERSAND_EQUALS •

    $default  reduce using rule 43 (AssignOp)


State 93

   44 AssignOp: PIPE_EQUALS •

    $default  reduce using rule 44 (AssignOp)


State 94

   45 AssignOp: CARET_EQUALS •

    $default  reduce using rule 45 (AssignOp)


State 95

   46 AssignOp: TILDE_EQUALS •

    $default  reduce using rule 46 (AssignOp)


State 96

   34 AssignExpr: AssignTarget AssignOp • Expr

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    STAR             shift, and go to state 71
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    Expr            go to state 137
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 97

   61 ExprStmt: Expr SEMICOLON •

    $default  reduce using rule 61 (ExprStmt)


State 98

   70 RelOp: LESS_THAN •

    $default  reduce using rule 70 (RelOp)


State 99

   71 RelOp: GREATER_THAN •

    $default  reduce using rule 71 (RelOp)


State 100

   72 RelOp: LESS_THAN_EQUALS •

    $default  reduce using rule 72 (RelOp)


State 101

   73 RelOp: GREATER_THAN_EQUALS •

    $default  reduce using rule 73 (RelOp)


State 102

   74 RelOp: EQUALS_EQUALS •

    $default  reduce using rule 74 (RelOp)


State 103

   75 RelOp: BANG_EQUALS •

    $default  reduce using rule 75 (RelOp)


State 104

   66 Expr: UnaryExpr RelOpTail •

    $default  reduce using rule 66 (Expr)


State 105

   68 RelOpTail: RelOp • UnaryExpr RelOpTail

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    UnaryExpr      go to state 138
    PostIncrement  go to state 60
    PreIncrement   go to state 61
    UnaryOp        go to state 62
    SimpleExpr     go to state 63
    Term           go to state 64
    Factor         go to state 65


State 106

   76 UnaryExpr: UnaryOp UnaryExpr •

    $default  reduce using rule 76 (UnaryExpr)


State 107

   92 AddOp: MINUS •

    $default  reduce using rule 92 (AddOp)


State 108

   91 AddOp: PLUS •

    $default  reduce using rule 91 (AddOp)


State 109

   93 AddOp: PIPE •

    $default  reduce using rule 93 (AddOp)


State 110

   94 AddOp: CARET •

    $default  reduce using rule 94 (AddOp)


State 111

   95 AddOp: PIPE_PIPE •

    $default  reduce using rule 95 (AddOp)


State 112

   88 SimpleExpr: Term AddOpTail •

    $default  reduce using rule 88 (SimpleExpr)


State 113

   89 AddOpTail: AddOp • Term AddOpTail

    IDENTIFIER       shift, and go to state 139
    OPEN_PAREN       shift, and go to state 30
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41

    Term    go to state 140
    Factor  go to state 65


State 114

   99 MulOp: STAR •

    $default  reduce using rule 99 (MulOp)


State 115

  100 MulOp: SLASH •

    $default  reduce using rule 100 (MulOp)


State 116

  101 MulOp: AMPERSAND •

    $default  reduce using rule 101 (MulOp)


State 117

  102 MulOp: AMPERSAND_AMPERSAND •

    $default  reduce using rule 102 (MulOp)


State 118

   96 Term: Factor MulOpTail •

    $default  reduce using rule 96 (Term)


State 119

   97 MulOpTail: MulOp • Factor MulOpTail

    IDENTIFIER       shift, and go to state 139
    OPEN_PAREN       shift, and go to state 30
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41

    Factor  go to state 141


State 120

  108 Factor: IDENTIFIER OPEN_PAREN ExprList • CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 142


State 121

   62 ExprList: Expr • ExprTail

    COMMA  shift, and go to state 143

    $default  reduce using rule 65 (ExprTail)

    ExprTail  go to state 144


State 122

   36 AssignTarget: IDENTIFIER OPEN_BRACKET Expr • CLOSED_BRACKET

    CLOSED_BRACKET  shift, and go to state 145


State 123

   81 PointerRefExpr: STAR IDENTIFIER •

    $default  reduce using rule 81 (PointerRefExpr)


State 124

  103 Factor: OPEN_PAREN Expr CLOSED_PAREN •

    $default  reduce using rule 103 (Factor)


State 125

   51 ConditionOp: AssignExpr •

    $default  reduce using rule 51 (ConditionOp)


State 126

   47 IfStmt: KEYWORD_IF OPEN_PAREN ConditionOp • CLOSED_PAREN Body
   48       | KEYWORD_IF OPEN_PAREN ConditionOp • CLOSED_PAREN Body KEYWORD_ELSE Body

    CLOSED_PAREN  shift, and go to state 146


State 127

   50 ConditionOp: Expr •

    $default  reduce using rule 50 (ConditionOp)


State 128

   49 WhileStmt: KEYWORD_WHILE OPEN_PAREN ConditionOp • CLOSED_PAREN Body

    CLOSED_PAREN  shift, and go to state 147


State 129

   35 AssignTarget: IDENTIFIER •
   36             | IDENTIFIER • OPEN_BRACKET Expr CLOSED_BRACKET

    OPEN_BRACKET  shift, and go to state 67

    $default  reduce using rule 35 (AssignTarget)


State 130

   37 AssignTarget: STAR • IDENTIFIER

    IDENTIFIER  shift, and go to state 148


State 131

   53 ForInit: VarDeclExpr •

    $default  reduce using rule 53 (ForInit)


State 132

   54 ForInit: AssignExpr •

    $default  reduce using rule 54 (ForInit)


State 133

   52 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit • SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    SEMICOLON  shift, and go to state 149


State 134

   60 ReturnStmt: KEYWORD_RET ExprOpt SEMICOLON •

    $default  reduce using rule 60 (ReturnStmt)


State 135

   29 InitOpt: EQUALS • AssignValue

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    OPEN_CURLY       shift, and go to state 150
    STAR             shift, and go to state 71
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    AssignValue     go to state 151
    Expr            go to state 152
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 136

   28 VarDeclExpr: Type IDENTIFIER InitOpt •

    $default  reduce using rule 28 (VarDeclExpr)


State 137

   34 AssignExpr: AssignTarget AssignOp Expr •

    $default  reduce using rule 34 (AssignExpr)


State 138

   68 RelOpTail: RelOp UnaryExpr • RelOpTail

    LESS_THAN            shift, and go to state 98
    GREATER_THAN         shift, and go to state 99
    LESS_THAN_EQUALS     shift, and go to state 100
    GREATER_THAN_EQUALS  shift, and go to state 101
    EQUALS_EQUALS        shift, and go to state 102
    BANG_EQUALS          shift, and go to state 103

    $default  reduce using rule 69 (RelOpTail)

    RelOpTail  go to state 153
    RelOp      go to state 105


State 139

  104 Factor: IDENTIFIER •
  108       | IDENTIFIER • OPEN_PAREN ExprList CLOSED_PAREN

    OPEN_PAREN  shift, and go to state 66

    $default  reduce using rule 104 (Factor)


State 140

   89 AddOpTail: AddOp Term • AddOpTail

    MINUS      shift, and go to state 107
    PLUS       shift, and go to state 108
    PIPE       shift, and go to state 109
    CARET      shift, and go to state 110
    PIPE_PIPE  shift, and go to state 111

    $default  reduce using rule 90 (AddOpTail)

    AddOpTail  go to state 154
    AddOp      go to state 113


State 141

   97 MulOpTail: MulOp Factor • MulOpTail

    STAR                 shift, and go to state 114
    SLASH                shift, and go to state 115
    AMPERSAND            shift, and go to state 116
    AMPERSAND_AMPERSAND  shift, and go to state 117

    $default  reduce using rule 98 (MulOpTail)

    MulOpTail  go to state 155
    MulOp      go to state 119


State 142

  108 Factor: IDENTIFIER OPEN_PAREN ExprList CLOSED_PAREN •

    $default  reduce using rule 108 (Factor)


State 143

   64 ExprTail: COMMA • Expr ExprTail

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    STAR             shift, and go to state 71
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    Expr            go to state 156
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 144

   62 ExprList: Expr ExprTail •

    $default  reduce using rule 62 (ExprList)


State 145

   36 AssignTarget: IDENTIFIER OPEN_BRACKET Expr CLOSED_BRACKET •

    $default  reduce using rule 36 (AssignTarget)


State 146

   47 IfStmt: KEYWORD_IF OPEN_PAREN ConditionOp CLOSED_PAREN • Body
   48       | KEYWORD_IF OPEN_PAREN ConditionOp CLOSED_PAREN • Body KEYWORD_ELSE Body

    IDENTIFIER       shift, and go to state 29
    OPEN_PAREN       shift, and go to state 30
    OPEN_CURLY       shift, and go to state 157
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 31
    KEYWORD_IF       shift, and go to state 32
    KEYWORD_WHILE    shift, and go to state 33
    KEYWORD_FOR      shift, and go to state 34
    KEYWORD_RET      shift, and go to state 35
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    Type            go to state 44
    BaseType        go to state 14
    Stmt            go to state 158
    Body            go to state 159
    VarDeclStmt     go to state 47
    VarDeclExpr     go to state 48
    AssignStmt      go to state 49
    AssignExpr      go to state 50
    AssignTarget    go to state 51
    IfStmt          go to state 52
    WhileStmt       go to state 53
    ForStmt         go to state 54
    ReturnStmt      go to state 55
    ExprStmt        go to state 56
    Expr            go to state 57
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 147

   49 WhileStmt: KEYWORD_WHILE OPEN_PAREN ConditionOp CLOSED_PAREN • Body

    IDENTIFIER       shift, and go to state 29
    OPEN_PAREN       shift, and go to state 30
    OPEN_CURLY       shift, and go to state 157
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 31
    KEYWORD_IF       shift, and go to state 32
    KEYWORD_WHILE    shift, and go to state 33
    KEYWORD_FOR      shift, and go to state 34
    KEYWORD_RET      shift, and go to state 35
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    Type            go to state 44
    BaseType        go to state 14
    Stmt            go to state 158
    Body            go to state 160
    VarDeclStmt     go to state 47
    VarDeclExpr     go to state 48
    AssignStmt      go to state 49
    AssignExpr      go to state 50
    AssignTarget    go to state 51
    IfStmt          go to state 52
    WhileStmt       go to state 53
    ForStmt         go to state 54
    ReturnStmt      go to state 55
    ExprStmt        go to state 56
    Expr            go to state 57
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 148

   37 AssignTarget: STAR IDENTIFIER •

    $default  reduce using rule 37 (AssignTarget)


State 149

   52 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON • ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    STAR             shift, and go to state 71
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    $default  reduce using rule 57 (ExprOpt)

    ExprOpt         go to state 161
    Expr            go to state 78
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 150

   32 AssignValue: OPEN_CURLY • ExprList CLOSED_CURLY

    IDENTIFIER       shift, and go to state 70
    OPEN_PAREN       shift, and go to state 30
    STAR             shift, and go to state 71
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    $default  reduce using rule 63 (ExprList)

    ExprList        go to state 162
    Expr            go to state 121
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 151

   29 InitOpt: EQUALS AssignValue •

    $default  reduce using rule 29 (InitOpt)


State 152

   31 AssignValue: Expr •

    $default  reduce using rule 31 (AssignValue)


State 153

   68 RelOpTail: RelOp UnaryExpr RelOpTail •

    $default  reduce using rule 68 (RelOpTail)


State 154

   89 AddOpTail: AddOp Term AddOpTail •

    $default  reduce using rule 89 (AddOpTail)


State 155

   97 MulOpTail: MulOp Factor MulOpTail •

    $default  reduce using rule 97 (MulOpTail)


State 156

   64 ExprTail: COMMA Expr • ExprTail

    COMMA  shift, and go to state 143

    $default  reduce using rule 65 (ExprTail)

    ExprTail  go to state 163


State 157

   25 Body: OPEN_CURLY • StmtList CLOSED_CURLY

    IDENTIFIER       shift, and go to state 29
    OPEN_PAREN       shift, and go to state 30
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 31
    KEYWORD_IF       shift, and go to state 32
    KEYWORD_WHILE    shift, and go to state 33
    KEYWORD_FOR      shift, and go to state 34
    KEYWORD_RET      shift, and go to state 35
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    $default  reduce using rule 17 (StmtList)

    Type            go to state 44
    BaseType        go to state 14
    StmtList        go to state 164
    Stmt            go to state 46
    VarDeclStmt     go to state 47
    VarDeclExpr     go to state 48
    AssignStmt      go to state 49
    AssignExpr      go to state 50
    AssignTarget    go to state 51
    IfStmt          go to state 52
    WhileStmt       go to state 53
    ForStmt         go to state 54
    ReturnStmt      go to state 55
    ExprStmt        go to state 56
    Expr            go to state 57
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 158

   26 Body: Stmt •

    $default  reduce using rule 26 (Body)


State 159

   47 IfStmt: KEYWORD_IF OPEN_PAREN ConditionOp CLOSED_PAREN Body •
   48       | KEYWORD_IF OPEN_PAREN ConditionOp CLOSED_PAREN Body • KEYWORD_ELSE Body

    KEYWORD_ELSE  shift, and go to state 165

    $default  reduce using rule 47 (IfStmt)


State 160

   49 WhileStmt: KEYWORD_WHILE OPEN_PAREN ConditionOp CLOSED_PAREN Body •

    $default  reduce using rule 49 (WhileStmt)


State 161

   52 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt • SEMICOLON ForUpdate CLOSED_PAREN Body

    SEMICOLON  shift, and go to state 166


State 162

   32 AssignValue: OPEN_CURLY ExprList • CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 167


State 163

   64 ExprTail: COMMA Expr ExprTail •

    $default  reduce using rule 64 (ExprTail)


State 164

   25 Body: OPEN_CURLY StmtList • CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 168


State 165

   48 IfStmt: KEYWORD_IF OPEN_PAREN ConditionOp CLOSED_PAREN Body KEYWORD_ELSE • Body

    IDENTIFIER       shift, and go to state 29
    OPEN_PAREN       shift, and go to state 30
    OPEN_CURLY       shift, and go to state 157
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 31
    KEYWORD_IF       shift, and go to state 32
    KEYWORD_WHILE    shift, and go to state 33
    KEYWORD_FOR      shift, and go to state 34
    KEYWORD_RET      shift, and go to state 35
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    Type            go to state 44
    BaseType        go to state 14
    Stmt            go to state 158
    Body            go to state 169
    VarDeclStmt     go to state 47
    VarDeclExpr     go to state 48
    AssignStmt      go to state 49
    AssignExpr      go to state 50
    AssignTarget    go to state 51
    IfStmt          go to state 52
    WhileStmt       go to state 53
    ForStmt         go to state 54
    ReturnStmt      go to state 55
    ExprStmt        go to state 56
    Expr            go to state 57
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 166

   52 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON • ForUpdate CLOSED_PAREN Body

    IDENTIFIER  shift, and go to state 129
    STAR        shift, and go to state 130

    $default  reduce using rule 59 (ForUpdate)

    AssignExpr    go to state 170
    AssignTarget  go to state 51
    ForUpdate     go to state 171


State 167

   32 AssignValue: OPEN_CURLY ExprList CLOSED_CURLY •

    $default  reduce using rule 32 (AssignValue)


State 168

   25 Body: OPEN_CURLY StmtList CLOSED_CURLY •

    $default  reduce using rule 25 (Body)


State 169

   48 IfStmt: KEYWORD_IF OPEN_PAREN ConditionOp CLOSED_PAREN Body KEYWORD_ELSE Body •

    $default  reduce using rule 48 (IfStmt)


State 170

   58 ForUpdate: AssignExpr •

    $default  reduce using rule 58 (ForUpdate)


State 171

   52 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate • CLOSED_PAREN Body

    CLOSED_PAREN  shift, and go to state 172


State 172

   52 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN • Body

    IDENTIFIER       shift, and go to state 29
    OPEN_PAREN       shift, and go to state 30
    OPEN_CURLY       shift, and go to state 157
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 31
    KEYWORD_IF       shift, and go to state 32
    KEYWORD_WHILE    shift, and go to state 33
    KEYWORD_FOR      shift, and go to state 34
    KEYWORD_RET      shift, and go to state 35
    MINUS            shift, and go to state 36
    BANG             shift, and go to state 37
    AMPERSAND        shift, and go to state 38
    INTEGER_LITERAL  shift, and go to state 39
    FLOAT_LITERAL    shift, and go to state 40
    CHAR_LITERAL     shift, and go to state 41
    PLUS_PLUS        shift, and go to state 42
    MINUS_MINUS      shift, and go to state 43

    Type            go to state 44
    BaseType        go to state 14
    Stmt            go to state 158
    Body            go to state 173
    VarDeclStmt     go to state 47
    VarDeclExpr     go to state 48
    AssignStmt      go to state 49
    AssignExpr      go to state 50
    AssignTarget    go to state 51
    IfStmt          go to state 52
    WhileStmt       go to state 53
    ForStmt         go to state 54
    ReturnStmt      go to state 55
    ExprStmt        go to state 56
    Expr            go to state 57
    UnaryExpr       go to state 58
    PointerRefExpr  go to state 59
    PostIncrement   go to state 60
    PreIncrement    go to state 61
    UnaryOp         go to state 62
    SimpleExpr      go to state 63
    Term            go to state 64
    Factor          go to state 65


State 173

   52 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body •

    $default  reduce using rule 52 (ForStmt)
