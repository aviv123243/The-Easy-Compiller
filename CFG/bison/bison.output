Grammar

    0 $accept: Program $end

    1 Program: FunctionDecl Program
    2        | /* empty */

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    4 ParamList: Param ParamTail
    5          | /* empty */

    6 ParamTail: COMMA Param ParamTail
    7          | /* empty */

    8 Param: Type IDENTIFIER

    9 Type: BaseType TypeTail

   10 BaseType: KEYWORD_INT
   11         | KEYWORD_FLOAT
   12         | KEYWORD_CHAR

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL CLOSED_BRACKET TypeTail
   14         | STAR TypeTail
   15         | /* empty */

   16 StmtList: Stmt StmtList
   17         | /* empty */

   18 Stmt: VarDeclStmt
   19     | AssignStmt
   20     | IfStmt
   21     | WhileStmt
   22     | ForStmt
   23     | ReturnStmt
   24     | ExprStmt

   25 Body: OPEN_CURLY StmtList CLOSED_CURLY
   26     | Stmt

   27 VarDeclStmt: VarDeclExpr SEMICOLON

   28 VarDeclExpr: Type IDENTIFIER InitOpt

   29 InitOpt: EQUALS Expr
   30        | /* empty */

   31 AssignStmt: AssignExpr SEMICOLON

   32 AssignExpr: AssignTarget AssignOp Expr

   33 AssignTarget: IDENTIFIER
   34             | IDENTIFIER OPEN_BRACKET Expr CLOSED_BRACKET
   35             | STAR IDENTIFIER

   36 AssignOp: EQUALS
   37         | PLUS_EQUALS
   38         | MINUS_EQUALS
   39         | SLASH_EQUALS
   40         | STAR_EQUALS
   41         | AMPERSAND_EQUALS
   42         | PIPE_EQUALS
   43         | CARET_EQUALS
   44         | TILDE_EQUALS

   45 IfStmt: KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN Body
   46       | KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN Body KEYWORD_ELSE Body

   47 WhileStmt: KEYWORD_WHILE OPEN_PAREN Expr CLOSED_PAREN Body

   48 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

   49 ForInit: VarDeclExpr
   50        | AssignExpr
   51        | /* empty */

   52 ExprOpt: Expr
   53        | /* empty */

   54 ForUpdate: AssignExpr
   55          | /* empty */

   56 ReturnStmt: KEYWORD_RET ExprOpt SEMICOLON

   57 ExprStmt: Expr SEMICOLON

   58 ExprList: Expr ExprTail
   59         | /* empty */

   60 ExprTail: COMMA Expr ExprTail
   61         | /* empty */

   62 Expr: UnaryExpr RelOpTail

   63 RelOpTail: RelOp UnaryExpr RelOpTail
   64          | /* empty */

   65 RelOp: LESS_THAN
   66      | GREATER_THAN
   67      | LESS_THAN_EQUALS
   68      | GREATER_THAN_EQUALS
   69      | EQUALS_EQUALS
   70      | BANG_EQUALS

   71 UnaryExpr: UnaryOp UnaryExpr
   72          | SimpleExpr

   73 UnaryOp: MINUS
   74        | BANG

   75 SimpleExpr: Term AddOpTail

   76 AddOpTail: AddOp Term AddOpTail
   77          | /* empty */

   78 AddOp: PLUS
   79      | MINUS
   80      | PIPE
   81      | CARET
   82      | PIPE_PIPE

   83 Term: Factor MulOpTail

   84 MulOpTail: MulOp Factor MulOpTail
   85          | /* empty */

   86 MulOp: STAR
   87      | SLASH
   88      | AMPERSAND
   89      | AMPERSAND_AMPERSAND

   90 Factor: OPEN_PAREN Expr CLOSED_PAREN
   91       | IDENTIFIER
   92       | INTEGER_LITERAL
   93       | FLOAT_LITERAL
   94       | CHAR_LITERAL
   95       | IDENTIFIER OPEN_PAREN ExprList CLOSED_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
KEYWORD_FN (258) 3
IDENTIFIER (259) 3 8 28 33 34 35 91 95
OPEN_PAREN (260) 3 45 46 47 48 90 95
CLOSED_PAREN (261) 3 45 46 47 48 90 95
RIGHT_ARROW (262) 3
OPEN_CURLY (263) 3 25
CLOSED_CURLY (264) 3 25
COMMA (265) 6 60
KEYWORD_INT (266) 10
KEYWORD_FLOAT (267) 11
KEYWORD_CHAR (268) 12
OPEN_BRACKET (269) 13 34
CLOSED_BRACKET (270) 13 34
STAR (271) 14 35 86
SEMICOLON (272) 27 31 48 56 57
EQUALS (273) 29 36
PLUS_EQUALS (274) 37
MINUS_EQUALS (275) 38
SLASH_EQUALS (276) 39
STAR_EQUALS (277) 40
AMPERSAND_EQUALS (278) 41
PIPE_EQUALS (279) 42
CARET_EQUALS (280) 43
TILDE_EQUALS (281) 44
KEYWORD_IF (282) 45 46
KEYWORD_ELSE (283) 46
KEYWORD_WHILE (284) 47
KEYWORD_FOR (285) 48
KEYWORD_RET (286) 56
LESS_THAN (287) 65
GREATER_THAN (288) 66
LESS_THAN_EQUALS (289) 67
GREATER_THAN_EQUALS (290) 68
EQUALS_EQUALS (291) 69
BANG_EQUALS (292) 70
MINUS (293) 73 79
BANG (294) 74
PLUS (295) 78
PIPE (296) 80
CARET (297) 81
PIPE_PIPE (298) 82
SLASH (299) 87
AMPERSAND (300) 88
AMPERSAND_AMPERSAND (301) 89
INTEGER_LITERAL (302) 13 92
FLOAT_LITERAL (303) 93
CHAR_LITERAL (304) 94
THEN (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Program (52)
    on left: 1 2, on right: 0 1
FunctionDecl (53)
    on left: 3, on right: 1
ParamList (54)
    on left: 4 5, on right: 3
ParamTail (55)
    on left: 6 7, on right: 4 6
Param (56)
    on left: 8, on right: 4 6
Type (57)
    on left: 9, on right: 3 8 28
BaseType (58)
    on left: 10 11 12, on right: 9
TypeTail (59)
    on left: 13 14 15, on right: 9 13 14
StmtList (60)
    on left: 16 17, on right: 3 16 25
Stmt (61)
    on left: 18 19 20 21 22 23 24, on right: 16 26
Body (62)
    on left: 25 26, on right: 45 46 47 48
VarDeclStmt (63)
    on left: 27, on right: 18
VarDeclExpr (64)
    on left: 28, on right: 27 49
InitOpt (65)
    on left: 29 30, on right: 28
AssignStmt (66)
    on left: 31, on right: 19
AssignExpr (67)
    on left: 32, on right: 31 50 54
AssignTarget (68)
    on left: 33 34 35, on right: 32
AssignOp (69)
    on left: 36 37 38 39 40 41 42 43 44, on right: 32
IfStmt (70)
    on left: 45 46, on right: 20
WhileStmt (71)
    on left: 47, on right: 21
ForStmt (72)
    on left: 48, on right: 22
ForInit (73)
    on left: 49 50 51, on right: 48
ExprOpt (74)
    on left: 52 53, on right: 48 56
ForUpdate (75)
    on left: 54 55, on right: 48
ReturnStmt (76)
    on left: 56, on right: 23
ExprStmt (77)
    on left: 57, on right: 24
ExprList (78)
    on left: 58 59, on right: 95
ExprTail (79)
    on left: 60 61, on right: 58 60
Expr (80)
    on left: 62, on right: 29 32 34 45 46 47 52 57 58 60 90
RelOpTail (81)
    on left: 63 64, on right: 62 63
RelOp (82)
    on left: 65 66 67 68 69 70, on right: 63
UnaryExpr (83)
    on left: 71 72, on right: 62 63 71
UnaryOp (84)
    on left: 73 74, on right: 71
SimpleExpr (85)
    on left: 75, on right: 72
AddOpTail (86)
    on left: 76 77, on right: 75 76
AddOp (87)
    on left: 78 79 80 81 82, on right: 76
Term (88)
    on left: 83, on right: 75 76
MulOpTail (89)
    on left: 84 85, on right: 83 84
MulOp (90)
    on left: 86 87 88 89, on right: 84
Factor (91)
    on left: 90 91 92 93 94 95, on right: 83 84


state 0

    0 $accept: . Program $end

    KEYWORD_FN  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program       go to state 2
    FunctionDecl  go to state 3


state 1

    3 FunctionDecl: KEYWORD_FN . IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    IDENTIFIER  shift, and go to state 4


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


state 3

    1 Program: FunctionDecl . Program

    KEYWORD_FN  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program       go to state 6
    FunctionDecl  go to state 3


state 4

    3 FunctionDecl: KEYWORD_FN IDENTIFIER . OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    OPEN_PAREN  shift, and go to state 7


state 5

    0 $accept: Program $end .

    $default  accept


state 6

    1 Program: FunctionDecl Program .

    $default  reduce using rule 1 (Program)


state 7

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN . ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10

    $default  reduce using rule 5 (ParamList)

    ParamList  go to state 11
    Param      go to state 12
    Type       go to state 13
    BaseType   go to state 14


state 8

   10 BaseType: KEYWORD_INT .

    $default  reduce using rule 10 (BaseType)


state 9

   11 BaseType: KEYWORD_FLOAT .

    $default  reduce using rule 11 (BaseType)


state 10

   12 BaseType: KEYWORD_CHAR .

    $default  reduce using rule 12 (BaseType)


state 11

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList . CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    CLOSED_PAREN  shift, and go to state 15


state 12

    4 ParamList: Param . ParamTail

    COMMA  shift, and go to state 16

    $default  reduce using rule 7 (ParamTail)

    ParamTail  go to state 17


state 13

    8 Param: Type . IDENTIFIER

    IDENTIFIER  shift, and go to state 18


state 14

    9 Type: BaseType . TypeTail

    OPEN_BRACKET  shift, and go to state 19
    STAR          shift, and go to state 20

    $default  reduce using rule 15 (TypeTail)

    TypeTail  go to state 21


state 15

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN . RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY

    RIGHT_ARROW  shift, and go to state 22


state 16

    6 ParamTail: COMMA . Param ParamTail

    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10

    Param     go to state 23
    Type      go to state 13
    BaseType  go to state 14


state 17

    4 ParamList: Param ParamTail .

    $default  reduce using rule 4 (ParamList)


state 18

    8 Param: Type IDENTIFIER .

    $default  reduce using rule 8 (Param)


state 19

   13 TypeTail: OPEN_BRACKET . INTEGER_LITERAL CLOSED_BRACKET TypeTail

    INTEGER_LITERAL  shift, and go to state 24


state 20

   14 TypeTail: STAR . TypeTail

    OPEN_BRACKET  shift, and go to state 19
    STAR          shift, and go to state 20

    $default  reduce using rule 15 (TypeTail)

    TypeTail  go to state 25


state 21

    9 Type: BaseType TypeTail .

    $default  reduce using rule 9 (Type)


state 22

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW . Type OPEN_CURLY StmtList CLOSED_CURLY

    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10

    Type      go to state 26
    BaseType  go to state 14


state 23

    6 ParamTail: COMMA Param . ParamTail

    COMMA  shift, and go to state 16

    $default  reduce using rule 7 (ParamTail)

    ParamTail  go to state 27


state 24

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL . CLOSED_BRACKET TypeTail

    CLOSED_BRACKET  shift, and go to state 28


state 25

   14 TypeTail: STAR TypeTail .

    $default  reduce using rule 14 (TypeTail)


state 26

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type . OPEN_CURLY StmtList CLOSED_CURLY

    OPEN_CURLY  shift, and go to state 29


state 27

    6 ParamTail: COMMA Param ParamTail .

    $default  reduce using rule 6 (ParamTail)


state 28

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL CLOSED_BRACKET . TypeTail

    OPEN_BRACKET  shift, and go to state 19
    STAR          shift, and go to state 20

    $default  reduce using rule 15 (TypeTail)

    TypeTail  go to state 30


state 29

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY . StmtList CLOSED_CURLY

    IDENTIFIER       shift, and go to state 31
    OPEN_PAREN       shift, and go to state 32
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 33
    KEYWORD_IF       shift, and go to state 34
    KEYWORD_WHILE    shift, and go to state 35
    KEYWORD_FOR      shift, and go to state 36
    KEYWORD_RET      shift, and go to state 37
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    $default  reduce using rule 17 (StmtList)

    Type          go to state 43
    BaseType      go to state 14
    StmtList      go to state 44
    Stmt          go to state 45
    VarDeclStmt   go to state 46
    VarDeclExpr   go to state 47
    AssignStmt    go to state 48
    AssignExpr    go to state 49
    AssignTarget  go to state 50
    IfStmt        go to state 51
    WhileStmt     go to state 52
    ForStmt       go to state 53
    ReturnStmt    go to state 54
    ExprStmt      go to state 55
    Expr          go to state 56
    UnaryExpr     go to state 57
    UnaryOp       go to state 58
    SimpleExpr    go to state 59
    Term          go to state 60
    Factor        go to state 61


state 30

   13 TypeTail: OPEN_BRACKET INTEGER_LITERAL CLOSED_BRACKET TypeTail .

    $default  reduce using rule 13 (TypeTail)


state 31

   33 AssignTarget: IDENTIFIER .
   34             | IDENTIFIER . OPEN_BRACKET Expr CLOSED_BRACKET
   91 Factor: IDENTIFIER .
   95       | IDENTIFIER . OPEN_PAREN ExprList CLOSED_PAREN

    OPEN_PAREN    shift, and go to state 62
    OPEN_BRACKET  shift, and go to state 63

    EQUALS            reduce using rule 33 (AssignTarget)
    PLUS_EQUALS       reduce using rule 33 (AssignTarget)
    MINUS_EQUALS      reduce using rule 33 (AssignTarget)
    SLASH_EQUALS      reduce using rule 33 (AssignTarget)
    STAR_EQUALS       reduce using rule 33 (AssignTarget)
    AMPERSAND_EQUALS  reduce using rule 33 (AssignTarget)
    PIPE_EQUALS       reduce using rule 33 (AssignTarget)
    CARET_EQUALS      reduce using rule 33 (AssignTarget)
    TILDE_EQUALS      reduce using rule 33 (AssignTarget)
    $default          reduce using rule 91 (Factor)


state 32

   90 Factor: OPEN_PAREN . Expr CLOSED_PAREN

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Expr        go to state 65
    UnaryExpr   go to state 57
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 33

   35 AssignTarget: STAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 66


state 34

   45 IfStmt: KEYWORD_IF . OPEN_PAREN Expr CLOSED_PAREN Body
   46       | KEYWORD_IF . OPEN_PAREN Expr CLOSED_PAREN Body KEYWORD_ELSE Body

    OPEN_PAREN  shift, and go to state 67


state 35

   47 WhileStmt: KEYWORD_WHILE . OPEN_PAREN Expr CLOSED_PAREN Body

    OPEN_PAREN  shift, and go to state 68


state 36

   48 ForStmt: KEYWORD_FOR . OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    OPEN_PAREN  shift, and go to state 69


state 37

   56 ReturnStmt: KEYWORD_RET . ExprOpt SEMICOLON

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    $default  reduce using rule 53 (ExprOpt)

    ExprOpt     go to state 70
    Expr        go to state 71
    UnaryExpr   go to state 57
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 38

   73 UnaryOp: MINUS .

    $default  reduce using rule 73 (UnaryOp)


state 39

   74 UnaryOp: BANG .

    $default  reduce using rule 74 (UnaryOp)


state 40

   92 Factor: INTEGER_LITERAL .

    $default  reduce using rule 92 (Factor)


state 41

   93 Factor: FLOAT_LITERAL .

    $default  reduce using rule 93 (Factor)


state 42

   94 Factor: CHAR_LITERAL .

    $default  reduce using rule 94 (Factor)


state 43

   28 VarDeclExpr: Type . IDENTIFIER InitOpt

    IDENTIFIER  shift, and go to state 72


state 44

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList . CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 73


state 45

   16 StmtList: Stmt . StmtList

    IDENTIFIER       shift, and go to state 31
    OPEN_PAREN       shift, and go to state 32
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 33
    KEYWORD_IF       shift, and go to state 34
    KEYWORD_WHILE    shift, and go to state 35
    KEYWORD_FOR      shift, and go to state 36
    KEYWORD_RET      shift, and go to state 37
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    $default  reduce using rule 17 (StmtList)

    Type          go to state 43
    BaseType      go to state 14
    StmtList      go to state 74
    Stmt          go to state 45
    VarDeclStmt   go to state 46
    VarDeclExpr   go to state 47
    AssignStmt    go to state 48
    AssignExpr    go to state 49
    AssignTarget  go to state 50
    IfStmt        go to state 51
    WhileStmt     go to state 52
    ForStmt       go to state 53
    ReturnStmt    go to state 54
    ExprStmt      go to state 55
    Expr          go to state 56
    UnaryExpr     go to state 57
    UnaryOp       go to state 58
    SimpleExpr    go to state 59
    Term          go to state 60
    Factor        go to state 61


state 46

   18 Stmt: VarDeclStmt .

    $default  reduce using rule 18 (Stmt)


state 47

   27 VarDeclStmt: VarDeclExpr . SEMICOLON

    SEMICOLON  shift, and go to state 75


state 48

   19 Stmt: AssignStmt .

    $default  reduce using rule 19 (Stmt)


state 49

   31 AssignStmt: AssignExpr . SEMICOLON

    SEMICOLON  shift, and go to state 76


state 50

   32 AssignExpr: AssignTarget . AssignOp Expr

    EQUALS            shift, and go to state 77
    PLUS_EQUALS       shift, and go to state 78
    MINUS_EQUALS      shift, and go to state 79
    SLASH_EQUALS      shift, and go to state 80
    STAR_EQUALS       shift, and go to state 81
    AMPERSAND_EQUALS  shift, and go to state 82
    PIPE_EQUALS       shift, and go to state 83
    CARET_EQUALS      shift, and go to state 84
    TILDE_EQUALS      shift, and go to state 85

    AssignOp  go to state 86


state 51

   20 Stmt: IfStmt .

    $default  reduce using rule 20 (Stmt)


state 52

   21 Stmt: WhileStmt .

    $default  reduce using rule 21 (Stmt)


state 53

   22 Stmt: ForStmt .

    $default  reduce using rule 22 (Stmt)


state 54

   23 Stmt: ReturnStmt .

    $default  reduce using rule 23 (Stmt)


state 55

   24 Stmt: ExprStmt .

    $default  reduce using rule 24 (Stmt)


state 56

   57 ExprStmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 87


state 57

   62 Expr: UnaryExpr . RelOpTail

    LESS_THAN            shift, and go to state 88
    GREATER_THAN         shift, and go to state 89
    LESS_THAN_EQUALS     shift, and go to state 90
    GREATER_THAN_EQUALS  shift, and go to state 91
    EQUALS_EQUALS        shift, and go to state 92
    BANG_EQUALS          shift, and go to state 93

    $default  reduce using rule 64 (RelOpTail)

    RelOpTail  go to state 94
    RelOp      go to state 95


state 58

   71 UnaryExpr: UnaryOp . UnaryExpr

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    UnaryExpr   go to state 96
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 59

   72 UnaryExpr: SimpleExpr .

    $default  reduce using rule 72 (UnaryExpr)


state 60

   75 SimpleExpr: Term . AddOpTail

    MINUS      shift, and go to state 97
    PLUS       shift, and go to state 98
    PIPE       shift, and go to state 99
    CARET      shift, and go to state 100
    PIPE_PIPE  shift, and go to state 101

    $default  reduce using rule 77 (AddOpTail)

    AddOpTail  go to state 102
    AddOp      go to state 103


state 61

   83 Term: Factor . MulOpTail

    STAR                 shift, and go to state 104
    SLASH                shift, and go to state 105
    AMPERSAND            shift, and go to state 106
    AMPERSAND_AMPERSAND  shift, and go to state 107

    $default  reduce using rule 85 (MulOpTail)

    MulOpTail  go to state 108
    MulOp      go to state 109


state 62

   95 Factor: IDENTIFIER OPEN_PAREN . ExprList CLOSED_PAREN

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    $default  reduce using rule 59 (ExprList)

    ExprList    go to state 110
    Expr        go to state 111
    UnaryExpr   go to state 57
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 63

   34 AssignTarget: IDENTIFIER OPEN_BRACKET . Expr CLOSED_BRACKET

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Expr        go to state 112
    UnaryExpr   go to state 57
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 64

   91 Factor: IDENTIFIER .
   95       | IDENTIFIER . OPEN_PAREN ExprList CLOSED_PAREN

    OPEN_PAREN  shift, and go to state 62

    $default  reduce using rule 91 (Factor)


state 65

   90 Factor: OPEN_PAREN Expr . CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 113


state 66

   35 AssignTarget: STAR IDENTIFIER .

    $default  reduce using rule 35 (AssignTarget)


state 67

   45 IfStmt: KEYWORD_IF OPEN_PAREN . Expr CLOSED_PAREN Body
   46       | KEYWORD_IF OPEN_PAREN . Expr CLOSED_PAREN Body KEYWORD_ELSE Body

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Expr        go to state 114
    UnaryExpr   go to state 57
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 68

   47 WhileStmt: KEYWORD_WHILE OPEN_PAREN . Expr CLOSED_PAREN Body

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Expr        go to state 115
    UnaryExpr   go to state 57
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 69

   48 ForStmt: KEYWORD_FOR OPEN_PAREN . ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    IDENTIFIER     shift, and go to state 116
    KEYWORD_INT    shift, and go to state 8
    KEYWORD_FLOAT  shift, and go to state 9
    KEYWORD_CHAR   shift, and go to state 10
    STAR           shift, and go to state 33

    $default  reduce using rule 51 (ForInit)

    Type          go to state 43
    BaseType      go to state 14
    VarDeclExpr   go to state 117
    AssignExpr    go to state 118
    AssignTarget  go to state 50
    ForInit       go to state 119


state 70

   56 ReturnStmt: KEYWORD_RET ExprOpt . SEMICOLON

    SEMICOLON  shift, and go to state 120


state 71

   52 ExprOpt: Expr .

    $default  reduce using rule 52 (ExprOpt)


state 72

   28 VarDeclExpr: Type IDENTIFIER . InitOpt

    EQUALS  shift, and go to state 121

    $default  reduce using rule 30 (InitOpt)

    InitOpt  go to state 122


state 73

    3 FunctionDecl: KEYWORD_FN IDENTIFIER OPEN_PAREN ParamList CLOSED_PAREN RIGHT_ARROW Type OPEN_CURLY StmtList CLOSED_CURLY .

    $default  reduce using rule 3 (FunctionDecl)


state 74

   16 StmtList: Stmt StmtList .

    $default  reduce using rule 16 (StmtList)


state 75

   27 VarDeclStmt: VarDeclExpr SEMICOLON .

    $default  reduce using rule 27 (VarDeclStmt)


state 76

   31 AssignStmt: AssignExpr SEMICOLON .

    $default  reduce using rule 31 (AssignStmt)


state 77

   36 AssignOp: EQUALS .

    $default  reduce using rule 36 (AssignOp)


state 78

   37 AssignOp: PLUS_EQUALS .

    $default  reduce using rule 37 (AssignOp)


state 79

   38 AssignOp: MINUS_EQUALS .

    $default  reduce using rule 38 (AssignOp)


state 80

   39 AssignOp: SLASH_EQUALS .

    $default  reduce using rule 39 (AssignOp)


state 81

   40 AssignOp: STAR_EQUALS .

    $default  reduce using rule 40 (AssignOp)


state 82

   41 AssignOp: AMPERSAND_EQUALS .

    $default  reduce using rule 41 (AssignOp)


state 83

   42 AssignOp: PIPE_EQUALS .

    $default  reduce using rule 42 (AssignOp)


state 84

   43 AssignOp: CARET_EQUALS .

    $default  reduce using rule 43 (AssignOp)


state 85

   44 AssignOp: TILDE_EQUALS .

    $default  reduce using rule 44 (AssignOp)


state 86

   32 AssignExpr: AssignTarget AssignOp . Expr

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Expr        go to state 123
    UnaryExpr   go to state 57
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 87

   57 ExprStmt: Expr SEMICOLON .

    $default  reduce using rule 57 (ExprStmt)


state 88

   65 RelOp: LESS_THAN .

    $default  reduce using rule 65 (RelOp)


state 89

   66 RelOp: GREATER_THAN .

    $default  reduce using rule 66 (RelOp)


state 90

   67 RelOp: LESS_THAN_EQUALS .

    $default  reduce using rule 67 (RelOp)


state 91

   68 RelOp: GREATER_THAN_EQUALS .

    $default  reduce using rule 68 (RelOp)


state 92

   69 RelOp: EQUALS_EQUALS .

    $default  reduce using rule 69 (RelOp)


state 93

   70 RelOp: BANG_EQUALS .

    $default  reduce using rule 70 (RelOp)


state 94

   62 Expr: UnaryExpr RelOpTail .

    $default  reduce using rule 62 (Expr)


state 95

   63 RelOpTail: RelOp . UnaryExpr RelOpTail

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    UnaryExpr   go to state 124
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 96

   71 UnaryExpr: UnaryOp UnaryExpr .

    $default  reduce using rule 71 (UnaryExpr)


state 97

   79 AddOp: MINUS .

    $default  reduce using rule 79 (AddOp)


state 98

   78 AddOp: PLUS .

    $default  reduce using rule 78 (AddOp)


state 99

   80 AddOp: PIPE .

    $default  reduce using rule 80 (AddOp)


state 100

   81 AddOp: CARET .

    $default  reduce using rule 81 (AddOp)


state 101

   82 AddOp: PIPE_PIPE .

    $default  reduce using rule 82 (AddOp)


state 102

   75 SimpleExpr: Term AddOpTail .

    $default  reduce using rule 75 (SimpleExpr)


state 103

   76 AddOpTail: AddOp . Term AddOpTail

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Term    go to state 125
    Factor  go to state 61


state 104

   86 MulOp: STAR .

    $default  reduce using rule 86 (MulOp)


state 105

   87 MulOp: SLASH .

    $default  reduce using rule 87 (MulOp)


state 106

   88 MulOp: AMPERSAND .

    $default  reduce using rule 88 (MulOp)


state 107

   89 MulOp: AMPERSAND_AMPERSAND .

    $default  reduce using rule 89 (MulOp)


state 108

   83 Term: Factor MulOpTail .

    $default  reduce using rule 83 (Term)


state 109

   84 MulOpTail: MulOp . Factor MulOpTail

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Factor  go to state 126


state 110

   95 Factor: IDENTIFIER OPEN_PAREN ExprList . CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 127


state 111

   58 ExprList: Expr . ExprTail

    COMMA  shift, and go to state 128

    $default  reduce using rule 61 (ExprTail)

    ExprTail  go to state 129


state 112

   34 AssignTarget: IDENTIFIER OPEN_BRACKET Expr . CLOSED_BRACKET

    CLOSED_BRACKET  shift, and go to state 130


state 113

   90 Factor: OPEN_PAREN Expr CLOSED_PAREN .

    $default  reduce using rule 90 (Factor)


state 114

   45 IfStmt: KEYWORD_IF OPEN_PAREN Expr . CLOSED_PAREN Body
   46       | KEYWORD_IF OPEN_PAREN Expr . CLOSED_PAREN Body KEYWORD_ELSE Body

    CLOSED_PAREN  shift, and go to state 131


state 115

   47 WhileStmt: KEYWORD_WHILE OPEN_PAREN Expr . CLOSED_PAREN Body

    CLOSED_PAREN  shift, and go to state 132


state 116

   33 AssignTarget: IDENTIFIER .
   34             | IDENTIFIER . OPEN_BRACKET Expr CLOSED_BRACKET

    OPEN_BRACKET  shift, and go to state 63

    $default  reduce using rule 33 (AssignTarget)


state 117

   49 ForInit: VarDeclExpr .

    $default  reduce using rule 49 (ForInit)


state 118

   50 ForInit: AssignExpr .

    $default  reduce using rule 50 (ForInit)


state 119

   48 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit . SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    SEMICOLON  shift, and go to state 133


state 120

   56 ReturnStmt: KEYWORD_RET ExprOpt SEMICOLON .

    $default  reduce using rule 56 (ReturnStmt)


state 121

   29 InitOpt: EQUALS . Expr

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Expr        go to state 134
    UnaryExpr   go to state 57
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 122

   28 VarDeclExpr: Type IDENTIFIER InitOpt .

    $default  reduce using rule 28 (VarDeclExpr)


state 123

   32 AssignExpr: AssignTarget AssignOp Expr .

    $default  reduce using rule 32 (AssignExpr)


state 124

   63 RelOpTail: RelOp UnaryExpr . RelOpTail

    LESS_THAN            shift, and go to state 88
    GREATER_THAN         shift, and go to state 89
    LESS_THAN_EQUALS     shift, and go to state 90
    GREATER_THAN_EQUALS  shift, and go to state 91
    EQUALS_EQUALS        shift, and go to state 92
    BANG_EQUALS          shift, and go to state 93

    $default  reduce using rule 64 (RelOpTail)

    RelOpTail  go to state 135
    RelOp      go to state 95


state 125

   76 AddOpTail: AddOp Term . AddOpTail

    MINUS      shift, and go to state 97
    PLUS       shift, and go to state 98
    PIPE       shift, and go to state 99
    CARET      shift, and go to state 100
    PIPE_PIPE  shift, and go to state 101

    $default  reduce using rule 77 (AddOpTail)

    AddOpTail  go to state 136
    AddOp      go to state 103


state 126

   84 MulOpTail: MulOp Factor . MulOpTail

    STAR                 shift, and go to state 104
    SLASH                shift, and go to state 105
    AMPERSAND            shift, and go to state 106
    AMPERSAND_AMPERSAND  shift, and go to state 107

    $default  reduce using rule 85 (MulOpTail)

    MulOpTail  go to state 137
    MulOp      go to state 109


state 127

   95 Factor: IDENTIFIER OPEN_PAREN ExprList CLOSED_PAREN .

    $default  reduce using rule 95 (Factor)


state 128

   60 ExprTail: COMMA . Expr ExprTail

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Expr        go to state 138
    UnaryExpr   go to state 57
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 129

   58 ExprList: Expr ExprTail .

    $default  reduce using rule 58 (ExprList)


state 130

   34 AssignTarget: IDENTIFIER OPEN_BRACKET Expr CLOSED_BRACKET .

    $default  reduce using rule 34 (AssignTarget)


state 131

   45 IfStmt: KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN . Body
   46       | KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN . Body KEYWORD_ELSE Body

    IDENTIFIER       shift, and go to state 31
    OPEN_PAREN       shift, and go to state 32
    OPEN_CURLY       shift, and go to state 139
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 33
    KEYWORD_IF       shift, and go to state 34
    KEYWORD_WHILE    shift, and go to state 35
    KEYWORD_FOR      shift, and go to state 36
    KEYWORD_RET      shift, and go to state 37
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Type          go to state 43
    BaseType      go to state 14
    Stmt          go to state 140
    Body          go to state 141
    VarDeclStmt   go to state 46
    VarDeclExpr   go to state 47
    AssignStmt    go to state 48
    AssignExpr    go to state 49
    AssignTarget  go to state 50
    IfStmt        go to state 51
    WhileStmt     go to state 52
    ForStmt       go to state 53
    ReturnStmt    go to state 54
    ExprStmt      go to state 55
    Expr          go to state 56
    UnaryExpr     go to state 57
    UnaryOp       go to state 58
    SimpleExpr    go to state 59
    Term          go to state 60
    Factor        go to state 61


state 132

   47 WhileStmt: KEYWORD_WHILE OPEN_PAREN Expr CLOSED_PAREN . Body

    IDENTIFIER       shift, and go to state 31
    OPEN_PAREN       shift, and go to state 32
    OPEN_CURLY       shift, and go to state 139
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 33
    KEYWORD_IF       shift, and go to state 34
    KEYWORD_WHILE    shift, and go to state 35
    KEYWORD_FOR      shift, and go to state 36
    KEYWORD_RET      shift, and go to state 37
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Type          go to state 43
    BaseType      go to state 14
    Stmt          go to state 140
    Body          go to state 142
    VarDeclStmt   go to state 46
    VarDeclExpr   go to state 47
    AssignStmt    go to state 48
    AssignExpr    go to state 49
    AssignTarget  go to state 50
    IfStmt        go to state 51
    WhileStmt     go to state 52
    ForStmt       go to state 53
    ReturnStmt    go to state 54
    ExprStmt      go to state 55
    Expr          go to state 56
    UnaryExpr     go to state 57
    UnaryOp       go to state 58
    SimpleExpr    go to state 59
    Term          go to state 60
    Factor        go to state 61


state 133

   48 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON . ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body

    IDENTIFIER       shift, and go to state 64
    OPEN_PAREN       shift, and go to state 32
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    $default  reduce using rule 53 (ExprOpt)

    ExprOpt     go to state 143
    Expr        go to state 71
    UnaryExpr   go to state 57
    UnaryOp     go to state 58
    SimpleExpr  go to state 59
    Term        go to state 60
    Factor      go to state 61


state 134

   29 InitOpt: EQUALS Expr .

    $default  reduce using rule 29 (InitOpt)


state 135

   63 RelOpTail: RelOp UnaryExpr RelOpTail .

    $default  reduce using rule 63 (RelOpTail)


state 136

   76 AddOpTail: AddOp Term AddOpTail .

    $default  reduce using rule 76 (AddOpTail)


state 137

   84 MulOpTail: MulOp Factor MulOpTail .

    $default  reduce using rule 84 (MulOpTail)


state 138

   60 ExprTail: COMMA Expr . ExprTail

    COMMA  shift, and go to state 128

    $default  reduce using rule 61 (ExprTail)

    ExprTail  go to state 144


state 139

   25 Body: OPEN_CURLY . StmtList CLOSED_CURLY

    IDENTIFIER       shift, and go to state 31
    OPEN_PAREN       shift, and go to state 32
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 33
    KEYWORD_IF       shift, and go to state 34
    KEYWORD_WHILE    shift, and go to state 35
    KEYWORD_FOR      shift, and go to state 36
    KEYWORD_RET      shift, and go to state 37
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    $default  reduce using rule 17 (StmtList)

    Type          go to state 43
    BaseType      go to state 14
    StmtList      go to state 145
    Stmt          go to state 45
    VarDeclStmt   go to state 46
    VarDeclExpr   go to state 47
    AssignStmt    go to state 48
    AssignExpr    go to state 49
    AssignTarget  go to state 50
    IfStmt        go to state 51
    WhileStmt     go to state 52
    ForStmt       go to state 53
    ReturnStmt    go to state 54
    ExprStmt      go to state 55
    Expr          go to state 56
    UnaryExpr     go to state 57
    UnaryOp       go to state 58
    SimpleExpr    go to state 59
    Term          go to state 60
    Factor        go to state 61


state 140

   26 Body: Stmt .

    $default  reduce using rule 26 (Body)


state 141

   45 IfStmt: KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN Body .
   46       | KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN Body . KEYWORD_ELSE Body

    KEYWORD_ELSE  shift, and go to state 146

    $default  reduce using rule 45 (IfStmt)


state 142

   47 WhileStmt: KEYWORD_WHILE OPEN_PAREN Expr CLOSED_PAREN Body .

    $default  reduce using rule 47 (WhileStmt)


state 143

   48 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt . SEMICOLON ForUpdate CLOSED_PAREN Body

    SEMICOLON  shift, and go to state 147


state 144

   60 ExprTail: COMMA Expr ExprTail .

    $default  reduce using rule 60 (ExprTail)


state 145

   25 Body: OPEN_CURLY StmtList . CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 148


state 146

   46 IfStmt: KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN Body KEYWORD_ELSE . Body

    IDENTIFIER       shift, and go to state 31
    OPEN_PAREN       shift, and go to state 32
    OPEN_CURLY       shift, and go to state 139
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 33
    KEYWORD_IF       shift, and go to state 34
    KEYWORD_WHILE    shift, and go to state 35
    KEYWORD_FOR      shift, and go to state 36
    KEYWORD_RET      shift, and go to state 37
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Type          go to state 43
    BaseType      go to state 14
    Stmt          go to state 140
    Body          go to state 149
    VarDeclStmt   go to state 46
    VarDeclExpr   go to state 47
    AssignStmt    go to state 48
    AssignExpr    go to state 49
    AssignTarget  go to state 50
    IfStmt        go to state 51
    WhileStmt     go to state 52
    ForStmt       go to state 53
    ReturnStmt    go to state 54
    ExprStmt      go to state 55
    Expr          go to state 56
    UnaryExpr     go to state 57
    UnaryOp       go to state 58
    SimpleExpr    go to state 59
    Term          go to state 60
    Factor        go to state 61


state 147

   48 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON . ForUpdate CLOSED_PAREN Body

    IDENTIFIER  shift, and go to state 116
    STAR        shift, and go to state 33

    $default  reduce using rule 55 (ForUpdate)

    AssignExpr    go to state 150
    AssignTarget  go to state 50
    ForUpdate     go to state 151


state 148

   25 Body: OPEN_CURLY StmtList CLOSED_CURLY .

    $default  reduce using rule 25 (Body)


state 149

   46 IfStmt: KEYWORD_IF OPEN_PAREN Expr CLOSED_PAREN Body KEYWORD_ELSE Body .

    $default  reduce using rule 46 (IfStmt)


state 150

   54 ForUpdate: AssignExpr .

    $default  reduce using rule 54 (ForUpdate)


state 151

   48 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate . CLOSED_PAREN Body

    CLOSED_PAREN  shift, and go to state 152


state 152

   48 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN . Body

    IDENTIFIER       shift, and go to state 31
    OPEN_PAREN       shift, and go to state 32
    OPEN_CURLY       shift, and go to state 139
    KEYWORD_INT      shift, and go to state 8
    KEYWORD_FLOAT    shift, and go to state 9
    KEYWORD_CHAR     shift, and go to state 10
    STAR             shift, and go to state 33
    KEYWORD_IF       shift, and go to state 34
    KEYWORD_WHILE    shift, and go to state 35
    KEYWORD_FOR      shift, and go to state 36
    KEYWORD_RET      shift, and go to state 37
    MINUS            shift, and go to state 38
    BANG             shift, and go to state 39
    INTEGER_LITERAL  shift, and go to state 40
    FLOAT_LITERAL    shift, and go to state 41
    CHAR_LITERAL     shift, and go to state 42

    Type          go to state 43
    BaseType      go to state 14
    Stmt          go to state 140
    Body          go to state 153
    VarDeclStmt   go to state 46
    VarDeclExpr   go to state 47
    AssignStmt    go to state 48
    AssignExpr    go to state 49
    AssignTarget  go to state 50
    IfStmt        go to state 51
    WhileStmt     go to state 52
    ForStmt       go to state 53
    ReturnStmt    go to state 54
    ExprStmt      go to state 55
    Expr          go to state 56
    UnaryExpr     go to state 57
    UnaryOp       go to state 58
    SimpleExpr    go to state 59
    Term          go to state 60
    Factor        go to state 61


state 153

   48 ForStmt: KEYWORD_FOR OPEN_PAREN ForInit SEMICOLON ExprOpt SEMICOLON ForUpdate CLOSED_PAREN Body .

    $default  reduce using rule 48 (ForStmt)
